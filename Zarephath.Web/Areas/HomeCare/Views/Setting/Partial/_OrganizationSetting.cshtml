@using Zarephath.Web.Helpers
@model AddOrganizationSettingModel
<div>
    <form id="frmsettings" class="organizationSetting">
        @* <div class="page-bar">
                <h3 class="page-title">
                    @Resource.OrganizationSettings
                    <small>@Resource.EnterSystemSettingInformation</small>
                    <input type="submit" data-ng-click="Save()" class="btn btn-sm green-jungle pull-right" value="@Resource.Save" />
                    <a href="@Constants.HCDashboardURL" class="btn btn-sm red-mint pull-right letter-space margin-right-10">@Resource.Cancel</a>
                </h3>
            </div>*@
        <div class="row">
            <div class="col-md-12 mb-15">
                <input type="submit" data-ng-click="Save()" class="btn btn-sm green-jungle pull-right" value="@Resource.Save" />
                <a href="@Constants.HCDashboardURL" class="wzd-cancel">
                    <input type="button" class="btn btn-sm red-mint pull-right margin-right-10" value="@Resource.Cancel" />
                </a>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-12">
                <div class="form-group row">
                    <div class="col-sm-12">
                        <div class="fscontainer">
                            <div class="legend">
                                @Resource.OrganizationInformation
                            </div>
                            <div class="inner-col">
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label required">
                                        @Resource.OrganizationName
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.SiteName,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.SiteName",
         placeholder = @Resource.SiteName,
         maxlength = 100
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.SiteName)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label required">
                                        @Resource.SupportEmail
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.SupportEmail,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.SupportEmail",
         placeholder = @Resource.SupportEmail,
         maxlength = 200
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.SupportEmail)
                                    </div>
                                </div>

                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.Address
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.OrganizationAddress,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.OrganizationAddress",
         placeholder = @Resource.Address,
         maxlength = 200
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.OrganizationAddress)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.City
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.OrganizationCity,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.OrganizationCity",
         placeholder = @Resource.City,
         maxlength = 200
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.OrganizationCity)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.State
                                    </label>
                                    <div class="input-group-sm">

                                        @Html.DropDownListFor(m => m.OrganizationSetting.OrganizationState, Model.StateCodeList.ToSelectList(Convert.ToString(Model.OrganizationSetting.OrganizationState), "StateCode", "StateCode", Resource.StateCode, ""),
                                                 new
                                                 {
                                                     id = "SateCode",
                                                     data_ng_model = "SettingModel.OrganizationState",
                                                     data_ng_init = "SettingModel.OrganizationState = SettingModel.OrganizationState==null?'':SettingModel.OrganizationState.toString()",
                                                     @class = "form-control input-sm",
                                                 })

                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.OrganizationState)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.ZipCode
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.OrganizationZipcode,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.OrganizationZipcode",
         maxlength = Resource.ZipCodemaxlength,
         placeholder = Resource.ZipCodePlaceholder,

         dir_valid_number = ""
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.OrganizationZipcode)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label required">
                                        @Resource.TimeZone
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.DropDownListFor(m => m.OrganizationSetting.TimeZone, Common.SetTimeZoneList().ToSelectList(Convert.ToString(Model.OrganizationSetting.TimeZone), "Name", "Value", Resource.Select, ""), new
                    {
                        data_ng_model = "SettingModel.TimeZone",
                        @class = "form-control input-sm",
                        data_ng_init = "SettingModel.TimeZone=SettingModel.TimeZone==''?null:SettingModel.TimeZone",
                        //convert_to_number = "",
                    })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.TimeZone)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="fscontainer">
                            <div class="legend">
                                @Resource.SiteMiscellaneousSettings
                            </div>
                            <div class="inner-col">
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label required">
                                        @Resource.PageSize
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.PageSize,
                           new
                           {
                               @class = "form-control input-sm",
                               data_ng_model = "SettingModel.PageSize",
                               placeholder = @Resource.PageSize,
                               maxlength = 2,
                               dir_valid_number = ""
                           })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.PageSize)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12" style="display:none">
                                    <label class="control-label required">
                                        @Resource.GoogleReCaptcha
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.GoogleRecaptchaKey,
                           new
                           {
                               @class = "form-control input-sm",
                               data_ng_model = "SettingModel.GoogleRecaptchaKey",
                               placeholder = @Resource.GoogleReCaptcha,
                               maxlength = 100
                           })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.GoogleRecaptchaKey)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6">
                                    <label class="control-label">
                                        Patient Resignature Needed
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.DropDownListFor(m => m.OrganizationSetting.PatientResignatureNeeded, Common.SetYesNoListForBoolean().ToSelectList(Convert.ToString(Model.OrganizationSetting.PatientResignatureNeeded), "Name", "Value"), new
                    {
                        id = "EnableSSL",
                        data_ng_model = "SettingModel.PatientResignatureNeeded",
                        data_ng_init = "SettingModel.PatientResignatureNeeded=SettingModel.PatientResignatureNeeded==''?null:SettingModel.PatientResignatureNeeded",
                        @class = "form-control input-sm",
                        convert_to_boolean = ""
                    })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.PatientResignatureNeeded)
                                    </div>
                                </div>

                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        Google Drive Integration
                                    </label>
                                    <div class="input-group-sm">
                                        @*value="@Resource.LinkGoogleDrive"*@

                                        <input id="imgGoogleAuth"
                                               type="button"
                                               name="imgGoogleAuth"
                                               data-ng-click="GoogleAuth(SettingModel.OrganizationID)"
                                               class="btn btn-sm green-jungle ea-triggers-bound"
                                               value="Link Google Drive" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="fscontainer">
                            <div class="legend">
                                MIF Settings
                            </div>
                            <div class="inner-col">
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        Appendix
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.MIF_Appendix,
                       new
                       {
                           @class = "form-control input-sm",
                           data_ng_model = "SettingModel.MIF_Appendix",
                           placeholder = "Appendix",
                           maxlength = 100
                       })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.MIF_Appendix)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        Description
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.MIF_Description,
                       new
                       {
                           @class = "form-control input-sm",
                           data_ng_model = "SettingModel.MIF_Description",
                           placeholder = "Description",
                           maxlength = 500
                       })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.GoogleRecaptchaKey)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        Revision
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.MIF_Revision,
                       new
                       {
                           @class = "form-control input-sm",
                           data_ng_model = "SettingModel.MIF_Revision",
                           placeholder = "Revision",
                           maxlength = 100
                       })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.MIF_Revision)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="fscontainer">
                            <div class="legend">
                                @Resource.Site Logo Settings
                            </div>
                            <div class="inner-col">
                                <div class="col-lg-12 no-padding">
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label required"><strong>@Resource.LoginScreenLogo</strong></label>

                                        @Html.TextBoxFor(q => q.OrganizationSetting.LoginScreenLogo,
                             new
                             {
                                 data_ng_model = "SettingModel.TempLoginScreenLogoPath",
                                 @class = "form-control hideErrorContent replaceErrorSource",
                                 @readonly = "readonly"
                             })
                                        @Html.ValidationMessageFor(m => m.OrganizationSetting.LoginScreenLogo)

                                        <div class="replaceErrorDest">
                                            @*<div class="btn-group btn-block text-center">*@
                                            <div data-ng-if="!IsFileUploading" class="fileUpload btn btn-xs btn-primary margin-right-0">
                                                <span><i class="icon-plus"></i>&nbsp; @Resource.UploadImage</span>
                                                <div>
                                                    <div>
                                                        <input id="imgLoginLogo" type="file" name="files[]" class="upload" value="Browse"
                                                               fileupload
                                                               file-uploadurl="{{UploadFile}}"
                                                               beforesend="LoginLogoBeforeSend"
                                                               aftersend="LoginLogoAfterSend"
                                                               progress="LoginLogoProgress"
                                                               filelist="UploadingLoginScreenLogoFileList"
                                                               onchange="loadFile(event,'imgLoginLogo')"
                                                               limitmultifileuploads="1" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="font-sm margin-top-10">
                                                <b class="font-red-thunderbird">@Resource.NoteLabel</b>&nbsp;<i>@Html.Raw(string.Format(Resource.LoginScreenLogoNote))</i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <div class="col-sm-12 no-padding thumb_loginscreen">
                                            <div data-ng-if="SettingModel.TempLoginScreenLogoPath != null">
                                                <img class="img-responsive image" id="imgDisplay" src="" data-ng-show="!IsFileUploading && SettingModel.TempLoginScreenLogoPath" data-ng-src="{{SettingModel.TempLoginScreenLogoPath}}" />
                                                <img class="img-responsive image" id="imgLoginLogo" src="" data-ng-show="IsFileUploading" />

                                            </div>
                                            <div data-ng-if="SettingModel.TempLoginScreenLogoPath == null">
                                                <img class="img-responsive image" id="defaultImage" src="~/Assets/images/loginscreen-default-logo.png" />
                                            </div>
                                        </div>
                                        <div class="col-sm-12 no-padding" data-ng-repeat="filedata in UploadingLoginScreenLogoFileList">
                                            <div class="progress-bar" data-ng-class="{'progress-bar-success': !filedata.IsError,'progress-bar-danger': filedata.IsError}" data-ng-style="{ 'width': filedata.FileProgress+'%' }"><span data-ng-bind="filedata.IsError?filedata.ErrorMessage:filedata.FileProgress+'%'"></span></div>
                                        </div>
                                    </div>

                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label required"><strong>@Resource.SidebarLogo</strong></label>

                                        @Html.TextBoxFor(q => q.OrganizationSetting.SiteLogo,
new
{
data_ng_model = "SettingModel.TempLogoImagePath",
@class = "form-control hideErrorContent replaceErrorSource",
@readonly = "readonly"
})
                                        @Html.ValidationMessageFor(m => m.OrganizationSetting.SiteLogo)

                                        <div class="replaceErrorDest">
                                            @*<div class="btn-group btn-block text-center">*@
                                            <div data-ng-if="!IsFileUploading" class="fileUpload btn btn-xs btn-primary margin-right-0">
                                                <span><i class="icon-plus"></i>&nbsp; @Resource.UploadImage</span>
                                                <div>
                                                    <div>
                                                        <input id="imgSiteLogo" type="file" name="files[]" class="upload" value="Browse"
                                                               fileupload
                                                               file-uploadurl="{{UploadFile}}"
                                                               beforesend="BeforeSend"
                                                               aftersend="AfterSend"
                                                               progress="Progress"
                                                               filelist="UploadingSiteLogoFileList"
                                                               onchange="loadFile(event,'imgSiteLogo')"
                                                               limitmultifileuploads="1" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="font-sm margin-top-10">
                                                <b class="font-red-thunderbird">@Resource.NoteLabel</b>&nbsp;<i>@Html.Raw(string.Format(Resource.SidebarLogoNote))</i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <div class="col-sm-12 no-padding thumb_sidebar">
                                            <div data-ng-if="SettingModel.TempLogoImagePath != null">
                                                <img class="img-responsive image" id="imgDisplay" src="" data-ng-show="!IsFileUploading && SettingModel.TempLogoImagePath" data-ng-src="{{SettingModel.TempLogoImagePath}}" />
                                                <img class="img-responsive image" id="imgSiteLogo" src="" data-ng-if="IsFileUploading" />

                                            </div>
                                            <div data-ng-if="SettingModel.TempLogoImagePath == null">
                                                <img class="img-responsive image" style="height: 20px !important" id="defaultImage" src="~/Assets/images/sidebar-defaultlogo.png" />
                                            </div>
                                        </div>
                                        <div class="col-sm-12 no-padding" data-ng-repeat="filedata in UploadingSiteLogoFileList">
                                            <div class="progress-bar" data-ng-class="{'progress-bar-success': !filedata.IsError,'progress-bar-danger': filedata.IsError}" data-ng-style="{ 'width': filedata.FileProgress+'%' }"><span data-ng-bind="filedata.IsError?filedata.ErrorMessage:filedata.FileProgress+'%'"></span></div>
                                        </div>
                                    </div>

                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label required"><strong>@Resource.FavIcon</strong></label>

                                        @Html.TextBoxFor(q => q.OrganizationSetting.FavIcon,
new
{
data_ng_model = "SettingModel.TempFavIconPath",
@class = "form-control hideErrorContent replaceErrorSource",
@readonly = "readonly"
})
                                        @Html.ValidationMessageFor(m => m.OrganizationSetting.FavIcon)

                                        <div class="replaceErrorDest">
                                            @*<div class="btn-group btn-block text-center">*@
                                            <div data-ng-if="!IsFileUploading" class="fileUpload btn btn-xs btn-primary margin-right-0">
                                                <span><i class="icon-plus"></i>&nbsp; @Resource.UploadImage</span>
                                                <div>
                                                    <div>
                                                        <input id="imgFavIcon" type="file" name="files[]" class="upload" value="Browse"
                                                               fileupload
                                                               file-uploadurl="{{UploadFile}}"
                                                               beforesend="FavIconBeforeSend"
                                                               aftersend="FavIconAfterSend"
                                                               progress="FavIconProgress"
                                                               filelist="UploadingFavIconFileList"
                                                               onchange="loadFile(event,'imgFavIcon')"
                                                               limitmultifileuploads="1" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="font-sm margin-top-10">
                                                <b class="font-red-thunderbird">@Resource.NoteLabel</b>&nbsp;<i>@Html.Raw(string.Format(Resource.FavIconNote))</i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <div class="col-sm-12 no-padding thumb_favicon">
                                            <div data-ng-if="SettingModel.TempFavIconPath != null">
                                                <img class="img-responsive image" id="imgDisplay" src="" data-ng-show="!IsFileUploading && SettingModel.TempFavIconPath" data-ng-src="{{SettingModel.TempFavIconPath}}" />
                                                <img class="img-responsive image" id="imgFavIcon" src="" data-ng-show="IsFileUploading" />

                                            </div>
                                            <div data-ng-if="SettingModel.TempFavIconPath == null">
                                                <img class="img-responsive image" id="defaultImage" src="~/Assets/images/favicon-default.png" />
                                            </div>
                                        </div>
                                        <div class="col-sm-12 no-padding" data-ng-repeat="filedata in UploadingFavIconFileList">
                                            <div class="progress-bar" data-ng-class="{'progress-bar-success': !filedata.IsError,'progress-bar-danger': filedata.IsError}" data-ng-style="{ 'width': filedata.FileProgress+'%' }"><span data-ng-bind="filedata.IsError?filedata.ErrorMessage:filedata.FileProgress+'%'"></span></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 no-padding">
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label required"><strong>@Resource.TemplateLogo</strong></label>

                                        @Html.TextBoxFor(q => q.OrganizationSetting.TemplateLogo,
new
{
data_ng_model = "SettingModel.TempTemplateLogoPath",
@class = "form-control hideErrorContent replaceErrorSource",
@readonly = "readonly"
})
                                        @Html.ValidationMessageFor(m => m.OrganizationSetting.TemplateLogo)

                                        <div class="replaceErrorDest">
                                            @*<div class="btn-group btn-block text-center">*@
                                            <div data-ng-if="!IsFileUploading" class="fileUpload btn btn-xs btn-primary margin-right-0">
                                                <span><i class="icon-plus"></i>&nbsp; @Resource.UploadImage</span>
                                                <div>
                                                    <div>
                                                        <input id="imgTemplateLogo" type="file" name="files[]" class="upload" value="Browse"
                                                               fileupload
                                                               file-uploadurl="{{UploadFile}}"
                                                               beforesend="TemplateLogoBeforeSend"
                                                               aftersend="TemplateLogoAfterSend"
                                                               progress="TemplateLogoProgress"
                                                               filelist="UploadingTemplateLogoFileList"
                                                               onchange="loadFile(event,'imgTemplateLogo')"
                                                               limitmultifileuploads="1" />
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="font-sm margin-top-10">
                                                <b class="font-red-thunderbird">@Resource.NoteLabel</b>&nbsp;<i>@Html.Raw(string.Format(Resource.TemplateLogoNote))</i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <div class="col-sm-12 no-padding thumb_TemplateLogo">
                                            <div data-ng-if="SettingModel.TempTemplateLogoPath != null">
                                                <img class="img-responsive image" id="imgDisplay" src="" data-ng-show="!IsFileUploading && SettingModel.TempTemplateLogoPath" data-ng-src="{{SettingModel.TempTemplateLogoPath}}" />
                                                <img class="img-responsive image" id="imgTemplateLogo" src="" data-ng-show="IsFileUploading" />
                                            </div>
                                            <div data-ng-if="SettingModel.TempTemplateLogoPath == null">
                                                <img class="img-responsive image" id="defaultImage" src="~/Assets/images/TemplateLogo-default-logo.png" />
                                            </div>
                                        </div>
                                        <div class="col-sm-12 no-padding" data-ng-repeat="filedata in UploadingTemplateLogoFileList">
                                            <div class="progress-bar" data-ng-class="{'progress-bar-success': !filedata.IsError,'progress-bar-danger': filedata.IsError}" data-ng-style="{ 'width': filedata.FileProgress+'%' }"><span data-ng-bind="filedata.IsError?filedata.ErrorMessage:filedata.FileProgress+'%'"></span></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="fscontainer">
                            <div class="legend">
                                @Resource.InvoiceSettings
                            </div>
                            <div class="inner-col">
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.InvoiceGenerationFrequency
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.DropDownListFor(m => m.OrganizationSetting.InvoiceGenerationFrequency, Common.SetInvoiceGenerationFrequencyList().ToSelectList(Convert.ToString(Model.OrganizationSetting.InvoiceGenerationFrequency), "Name", "Value"),
                             new
                             {
                                 id = "EnableSSL",
                                 data_ng_model = "SettingModel.InvoiceGenerationFrequency",
                                 data_ng_init = "SettingModel.InvoiceGenerationFrequency=SettingModel.InvoiceGenerationFrequency==null?'1':SettingModel.InvoiceGenerationFrequency",
                                 @class = "form-control input-sm",
                             })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.InvoiceGenerationFrequency)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.InvoiceTaxRate
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.InvoiceTaxRate,
new
{
         @type = "number",
         @min = "0",
         @max = "100",
         @step = "0.01",
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.InvoiceTaxRate",
         placeholder = @Resource.InvoiceTaxRate
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.InvoiceTaxRate)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.InvoiceDueDays
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.InvoiceDueDays,
new
{
         @type = "number",
         @min = "0",
         @max = "100",
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.InvoiceDueDays",
         placeholder = @Resource.InvoiceDueDays
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.InvoiceDueDays)
                                    </div>
                                </div>
                                <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <label class="control-label">
                                        @Resource.InvoiceNotes
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextAreaFor(q => q.OrganizationSetting.InvoiceNote,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.InvoiceNote",
         placeholder = @Resource.InvoiceNotes,
         rows = 3
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.InvoiceNote)
                                    </div>
                                </div>
                                <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <input id="InvoiceAddressIsBilltoPayor" class="unicheckbox" type="checkbox"
                                           data-ng-checked="SettingModel.InvoiceAddressIsBilltoPayor"
                                           val="SettingModel.InvoiceAddressIsBilltoPayor"
                                           data-ng-click="onInvoiceAddressIsBilltoPayorChecked()">
                                    <label for="InvoiceAddressIsBilltoPayor" class="control-label">@Resource.BilltoPayor</label>
                                    <br /> &nbsp;&nbsp;&nbsp;&nbsp;
                                    <input id="InvoiceAddressIsIncludePatientAddress" class="unicheckbox" type="checkbox"
                                           data-ng-checked="SettingModel.InvoiceAddressIsIncludePatientAddress"
                                           val="SettingModel.InvoiceAddressIsIncludePatientAddress"
                                           data-ng-disabled="!SettingModel.InvoiceAddressIsBilltoPayor"
                                           data-ng-click="onInvoiceAddressIsIncludePatientAddressChecked()">
                                    <label for="InvoiceAddressIsIncludePatientAddress" class="control-label">@Resource.IncludePatientAddress</label>
                                    <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    <input id="InvoiceIsIncludePatientDOB" class="unicheckbox" type="checkbox"
                                           data-ng-checked="SettingModel.InvoiceIsIncludePatientDOB"
                                           data-ng-disabled="!SettingModel.InvoiceAddressIsIncludePatientAddress"
                                           data-ng-click="onChecked('InvoiceIsIncludePatientDOB')"
                                           val="SettingModel.InvoiceIsIncludePatientDOB">
                                    <label for="InvoiceIsIncludePatientDOB" class="control-label">@Resource.IncludePatientDOB</label>
                                    <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    <input id="InvoiceAddressIsIncludePatientAddressLine1" class="unicheckbox" type="checkbox"
                                           data-ng-checked="SettingModel.InvoiceAddressIsIncludePatientAddressLine1"
                                           data-ng-disabled="!SettingModel.InvoiceAddressIsIncludePatientAddress"
                                           data-ng-click="onChecked('InvoiceAddressIsIncludePatientAddressLine1')"
                                           val="SettingModel.InvoiceAddressIsIncludePatientAddressLine1">
                                    <label for="InvoiceAddressIsIncludePatientAddressLine1" class="control-label">@Resource.IncludeAddressline 1</label>
                                    <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    <input id="InvoiceAddressIsIncludePatientAddressLine2" class="unicheckbox" type="checkbox"
                                           data-ng-checked="SettingModel.InvoiceAddressIsIncludePatientAddressLine2"
                                           data-ng-disabled="!SettingModel.InvoiceAddressIsIncludePatientAddress"
                                           data-ng-click="onChecked('InvoiceAddressIsIncludePatientAddressLine2')"
                                           val="SettingModel.InvoiceAddressIsIncludePatientAddressLine2">
                                    <label for="InvoiceAddressIsIncludePatientAddressLine2" class="control-label">@Resource.IncludeAddressline 2</label>
                                    <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    <input id="InvoiceAddressIsIncludePatientAddressZip" class="unicheckbox" type="checkbox"
                                           data-ng-checked="SettingModel.InvoiceAddressIsIncludePatientAddressZip"
                                           data-ng-disabled="!SettingModel.InvoiceAddressIsIncludePatientAddress"
                                           data-ng-click="onChecked('InvoiceAddressIsIncludePatientAddressZip')"
                                           val="SettingModel.InvoiceAddressIsIncludePatientAddressZip">
                                    <label for="InvoiceAddressIsIncludePatientAddressZip" class="control-label">@Resource.IncludeAddressZip</label>

                                </div>
                            </div>

                        </div>

                        <div class="fscontainer">
                            <div class="legend">
                                @Resource.SMTPSettings
                                <input type="submit" data-ng-click="OpenTestEmailPopUp()" class="btn btn-sm btn-primary pull-right" value="@Resource.TestEmail" />

                            </div>
                            <div class="inner-col">
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.NetworkHost
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.NetworkHost,
                             new
                             {
                                 @class = "form-control input-sm",
                                 data_ng_model = "SettingModel.NetworkHost",
                                 placeholder = @Resource.NetworkHost,
                                 maxlength = 200
                             })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.NetworkHost)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.NetworkPort
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.NetworkPort,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.NetworkPort",
         placeholder = @Resource.NetworkPort,
         maxlength = 50
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.NetworkPort)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.FromTitle
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.FromTitle,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.FromTitle",
         placeholder = @Resource.FromTitle,
         maxlength = 100
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.FromTitle)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.FromEmail
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.FromEmail,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.FromEmail",
         placeholder = @Resource.FromEmail,
         maxlength = 200
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.FromEmail)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.Password
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.FromEmailPassword,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.FromEmailPassword",
         placeholder = @Resource.Password,
         maxlength = 200
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.FromEmailPassword)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.EnableSSL
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.DropDownListFor(m => m.OrganizationSetting.EnableSSL, Common.SetTrueFalseListForBoolean().ToSelectList(Convert.ToString(Model.OrganizationSetting.EnableSSL), "Name", "Value"), new
                    {
                        id = "EnableSSL",
                        data_ng_model = "SettingModel.EnableSSL",
                        data_ng_init = "SettingModel.EnableSSL=SettingModel.EnableSSL==''?null:SettingModel.EnableSSL",
                        @class = "form-control input-sm",
                        convert_to_boolean = ""
                    })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.EnableSSL)
                                    </div>
                                </div>
                            </div>

                        </div>
                        @*<div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                            <label class="control-label ">
                                                @Resource.TwilioAccountSID
                                            </label>
                                            <div class="input-group-sm">
                                                @Html.TextBoxFor(q => q.OrganizationSetting.FaxTwilioAccountSID,
                  new
                  {
                      @class = "form-control input-sm",
                      data_ng_model = "SettingModel.FaxTwilioAccountSID",
                      placeholder = @Resource.TwilioAccountSID,
                      maxlength = 200
                  })
                                                @Html.ValidationMessageFor(q => q.OrganizationSetting.FaxTwilioAccountSID)
                                            </div>
                                        </div>
                                        <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                            <label class="control-label ">
                                                @Resource.TwilioAuthToken
                                            </label>
                                            <div class="input-group-sm">
                                                @Html.TextBoxFor(q => q.OrganizationSetting.FaxAuthToken,
        new
        {
            @class = "form-control input-sm",
            data_ng_model = "SettingModel.FaxAuthToken",
            placeholder = @Resource.TwilioAuthToken,
            maxlength = 50
        })
                                                @Html.ValidationMessageFor(q => q.OrganizationSetting.FaxAuthToken)
                                            </div>
                                        </div>*@
                        <div class="fscontainer">
                            <div class="legend">
                                FAX Settings
                            </div>
                            <div class="inner-col">




                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        Fax No
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.Fax,
new
{
    @class = "form-control input-sm",
    data_ng_model = "SettingModel.Fax",
    placeholder = "Fax No",
    maxlength = 15
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.Fax)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="fscontainer">
                            <div class="legend">
                                @Resource.IVRDetails
                            </div>
                            <div class="inner-col">
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12" style="display:none">
                                    <label class="control-label ">
                                        @Resource.TwilioAccountSID
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.TwilioAccountSID,
                             new
                             {
                                 @class = "form-control input-sm",
                                 data_ng_model = "SettingModel.TwilioAccountSID",
                                 placeholder = @Resource.TwilioAccountSID,
                                 maxlength = 200
                             })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.TwilioAccountSID)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12" style="display:none">
                                    <label class="control-label ">
                                        @Resource.TwilioAuthToken
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.TwilioAuthToken,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.TwilioAuthToken",
         placeholder = @Resource.TwilioAuthToken,
         maxlength = 50
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.TwilioAuthToken)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12" style="display:none">
                                    <label class="control-label ">
                                        @Resource.TwilioServiceSID
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.TwilioServiceSID,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.TwilioServiceSID",
         placeholder = @Resource.TwilioServiceSID,
         maxlength = 200
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.TwilioServiceSID)
                                    </div>
                                </div>

                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        @Resource.CountryCode
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.TwilioDefaultCountryCode,
new
{
         @class = "form-control input-sm countrycode",
         data_ng_model = "SettingModel.TwilioDefaultCountryCode",
         placeholder = @Resource.TwilioCountryCode,
         maxlength = 10,

})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.TwilioDefaultCountryCode)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        @Resource.IVRPhoneNo
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.TwilioFromNos,
new
{
         @class = "form-control input-sm",
         data_ng_model = "SettingModel.TwilioFromNos",
         placeholder = @Resource.IVRPhoneNo,
         maxlength = 15
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.TwilioFromNo)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="fscontainer">
                            <div class="legend">
                                @Resource.BillingSettings
                            </div>
                            <div class="inner-col">
                                <b class="text-decoration-underline clearfix col-lg-12 padding-top-10 padding-bottom-15px">Submitter Details</b>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.SubmitterName
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.Submitter_NM103_NameLastOrOrganizationName,
                             new
                             {
                                 @class = "form-control input-sm",
                                 data_ng_model = "SettingModel.Submitter_NM103_NameLastOrOrganizationName",
                                 placeholder = @Resource.SubmitterName,
                                 maxlength = 200
                             })
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.Submitter_NM103_NameLastOrOrganizationName)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.SubmitterIdCode
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.Submitter_NM109_IdCode,
new
{
@class = "form-control input-sm",
data_ng_model = "SettingModel.Submitter_NM109_IdCode",
placeholder = @Resource.SubmitterIdCode,
maxlength = 80
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.Submitter_NM109_IdCode)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        @Resource.SubmitterContactName
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.Submitter_EDIContact1_PER02_Name,
new
{
@class = "form-control input-sm",
data_ng_model = "SettingModel.Submitter_EDIContact1_PER02_Name",
placeholder = @Resource.SubmitterContactName,
maxlength = 100
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.Submitter_EDIContact1_PER02_Name)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        @Resource.SubmitterPhone
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.Submitter_EDIContact1_PER04_CommunicationNumber,
new
{
@class = "form-control input-sm",
data_ng_model = "SettingModel.Submitter_EDIContact1_PER04_CommunicationNumber",
placeholder = @Resource.SubmitterPhone,
maxlength = 10
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.Submitter_EDIContact1_PER04_CommunicationNumber)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        @Resource.SubmitterEmail
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.Submitter_EDIContact1_PER08_CommunicationNumber,
new
{
@class = "form-control input-sm",
data_ng_model = "SettingModel.Submitter_EDIContact1_PER08_CommunicationNumber",
placeholder = @Resource.SubmitterEmail,
maxlength = 100
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.Submitter_EDIContact1_PER08_CommunicationNumber)
                                    </div>
                                </div>
                                <b class="text-decoration-underline clearfix col-lg-12 padding-top-10 padding-bottom-15px">Billing Provider Details</b>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        @Resource.BillingProviderName
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.BillingProvider_NM103_NameLastOrOrganizationName,
new
{
@class = "form-control input-sm",
data_ng_model = "SettingModel.BillingProvider_NM103_NameLastOrOrganizationName",
placeholder = @Resource.BillingProviderName,
maxlength = 200
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.BillingProvider_NM103_NameLastOrOrganizationName)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        @Resource.BillingProviderIdCode
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.BillingProvider_NM109_IdCode,
new
{
@class = "form-control input-sm",
data_ng_model = "SettingModel.BillingProvider_NM109_IdCode",
placeholder = @Resource.BillingProviderIdCode,
maxlength = 80
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.BillingProvider_NM109_IdCode)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.BillingProviderAddress
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.BillingProvider_N301_Address,
new
{
@class = "form-control input-sm",
data_ng_model = "SettingModel.BillingProvider_N301_Address",
placeholder = @Resource.BillingProviderAddress,
maxlength = 200
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.BillingProvider_N301_Address)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        @Resource.BillingProviderCity
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.BillingProvider_N401_City,
new
{
@class = "form-control input-sm",
data_ng_model = "SettingModel.BillingProvider_N401_City",
placeholder = @Resource.BillingProviderCity,
maxlength = 100
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.BillingProvider_N401_City)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        @Resource.BillingProviderState
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.DropDownListFor(m => m.OrganizationSetting.BillingProvider_N402_State, Model.StateCodeList.ToSelectList(Convert.ToString(Model.OrganizationSetting.BillingProvider_N402_State), "StateCode", "StateCode", Resource.BillingProviderState, ""),
                                                                                        new
                                                                                        {
                                                                                            id = "BillingProviderStateCode",
                                                                                            data_ng_model = "SettingModel.BillingProvider_N402_State",
                                                                                            data_ng_init = "SettingModel.BillingProvider_N402_State = SettingModel.BillingProvider_N402_State==null?'':SettingModel.BillingProvider_N402_State.toString()",
                                                                                            @class = "form-control input-sm",
                                                                                        })
                                        @*@Html.TextBoxFor(q => q.OrganizationSetting.BillingProvider_N402_State,
                        new
                        {
                            @class = "form-control input-sm",
                            data_ng_model = "SettingModel.BillingProvider_N402_State",
                            placeholder = @Resource.BillingProviderState,
                            maxlength = 100
                        })*@
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.BillingProvider_N402_State)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label ">
                                        @Resource.BillingProviderZipcode
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.BillingProvider_N403_Zipcode,
new
{
@class = "form-control input-sm",
data_ng_model = "SettingModel.BillingProvider_N403_Zipcode",
maxlength = Resource.ZipCodemaxlength,
placeholder = Resource.ZipCodePlaceholder,

})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.BillingProvider_N403_Zipcode)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.BillingProviderReferenceIdentification
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.BillingProvider_REF02_ReferenceIdentification,
new
{
@class = "form-control input-sm",
data_ng_model = "SettingModel.BillingProvider_REF02_ReferenceIdentification",
placeholder = @Resource.BillingProviderReferenceIdentification,
maxlength = 100
})
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.BillingProvider_REF02_ReferenceIdentification)
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="fscontainer">
                            <div class="legend">
                                @Resource.ClaimMD
                            </div>
                            <div class="inner-col">
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.ClaimMDAccountKey
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.ClaimMDAccountKey,
                                           new
                                           {
                                               @class = "form-control input-sm",
                                               data_ng_model = "SettingModel.ClaimMDAccountKey",
                                               placeholder = @Resource.ClaimMDAccountKey,
                                               maxlength = 100
                                           },
                                           !SessionHelper.IsMEAdmin)
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.ClaimMDAccountKey)
                                    </div>
                                </div>
                                <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                    <label class="control-label">
                                        @Resource.ClaimMDUserID
                                    </label>
                                    <div class="input-group-sm">
                                        @Html.TextBoxFor(q => q.OrganizationSetting.ClaimMDUserID,
                                           new
                                           {
                                               @class = "form-control input-sm",
                                               data_ng_model = "SettingModel.ClaimMDUserID",
                                               placeholder = @Resource.ClaimMDUserID,
                                               maxlength = 100
                                           },
                                           !SessionHelper.IsMEAdmin)
                                        @Html.ValidationMessageFor(q => q.OrganizationSetting.ClaimMDUserID)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--<div class="fscontainer">
    <div class="legend">Terms and Conditions</div>
    <div class="inner-col">
        <div class="form-group col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <label class="control-label ">-->
                        @*@Resource.Body*@
                        <!--</label>
                <div class="input-group-sm">
                    @Html.TextAreaFor(q => q.OrganizationSetting.TermsCondition,
                        new
                        {
                        data_ng_model = "SettingModel.TermsCondition",
                        @class = "form-control input-sm",
                        placeholder = "Terms & Conditions",
                        rows = "10",
                        })
                    @Html.ValidationMessageFor(q => q.OrganizationSetting.TermsCondition)
                </div>
            </div>
        </div>
    </div>-->
                        <div class="panel panel-default border-radius-0">
                            <div class="panel-heading border-bottom-0">
                                <b>@Resource.HasAggregator</b>
                                <input id="HasAggregator" class="unicheckbox" type="checkbox" data-ng-disabled="@((!SessionHelper.IsMEAdmin).ToString().ToLower())" data-ng-checked="SettingModel.HasAggregator" data-ng-click="onChangeHasAggregator()" val="SettingModel.HasAggregator">
                            </div>
                        </div>

                        @if (Common.IsOrgHasAggregator())
                        {
                            <div class="fscontainer has-aggregator">
                                <div class="legend">
                                    @Resource.HHAExchange
                                </div>
                                <div class="inner-col">
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label">
                                            @Resource.HHAXClientId
                                        </label>
                                        <div class="input-group-sm">
                                            @Html.TextBoxFor(q => q.OrganizationSetting.HHAXClientId,
                                               new
                                               {
                                                   @class = "form-control input-sm",
                                                   data_ng_model = "SettingModel.HHAXClientId",
                                                   placeholder = @Resource.HHAXClientId,
                                                   maxlength = 100
                                               },
                                               !SessionHelper.IsMEAdmin)
                                            @Html.ValidationMessageFor(q => q.OrganizationSetting.HHAXClientId)
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label">
                                            @Resource.HHAXClientSecret
                                        </label>
                                        <div class="input-group-sm">
                                            @Html.TextBoxFor(q => q.OrganizationSetting.HHAXClientSecret,
                                               new
                                               {
                                                   @class = "form-control input-sm",
                                                   data_ng_model = "SettingModel.HHAXClientSecret",
                                                   placeholder = @Resource.HHAXClientSecret,
                                                   @type = "password",
                                                   maxlength = 100
                                               },
                                               !SessionHelper.IsMEAdmin)
                                            @Html.ValidationMessageFor(q => q.OrganizationSetting.HHAXClientSecret)
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="fscontainer has-aggregator">
                                <div class="legend">
                                    @Resource.Sandata
                                </div>
                                <div class="inner-col">
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label">
                                            @Resource.SandataBusinessEntityID
                                        </label>
                                        <div class="input-group-sm">
                                            @Html.TextBoxFor(q => q.OrganizationSetting.SandataBusinessEntityID,
                                               new
                                               {
                                                   @class = "form-control input-sm",
                                                   data_ng_model = "SettingModel.SandataBusinessEntityID",
                                                   placeholder = @Resource.SandataBusinessEntityID,
                                                   maxlength = 100
                                               },
                                               !SessionHelper.IsMEAdmin)
                                            @Html.ValidationMessageFor(q => q.OrganizationSetting.SandataBusinessEntityID)
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label">
                                            @Resource.SandataBusinessEntityMedicaidIdentifier
                                        </label>
                                        <div class="input-group-sm">
                                            @Html.TextBoxFor(q => q.OrganizationSetting.SandataBusinessEntityMedicaidIdentifier,
                                               new
                                               {
                                                   @class = "form-control input-sm",
                                                   data_ng_model = "SettingModel.SandataBusinessEntityMedicaidIdentifier",
                                                   placeholder = @Resource.SandataBusinessEntityMedicaidIdentifier,
                                                   maxlength = 100
                                               },
                                               !SessionHelper.IsMEAdmin)
                                            @Html.ValidationMessageFor(q => q.OrganizationSetting.SandataBusinessEntityMedicaidIdentifier)
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label">
                                            @Resource.SandataUserID
                                        </label>
                                        <div class="input-group-sm">
                                            @Html.TextBoxFor(q => q.OrganizationSetting.SandataUserID,
                                               new
                                               {
                                                   @class = "form-control input-sm",
                                                   data_ng_model = "SettingModel.SandataUserID",
                                                   placeholder = @Resource.SandataUserID,
                                                   maxlength = 100
                                               },
                                               !SessionHelper.IsMEAdmin)
                                            @Html.ValidationMessageFor(q => q.OrganizationSetting.SandataUserID)
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label">
                                            @Resource.SandataPassword
                                        </label>
                                        <div class="input-group-sm">
                                            @Html.TextBoxFor(q => q.OrganizationSetting.SandataPassword,
                                               new
                                               {
                                                   @class = "form-control input-sm",
                                                   data_ng_model = "SettingModel.SandataPassword",
                                                   placeholder = @Resource.SandataPassword,
                                                   @type = "password",
                                                   maxlength = 100
                                               },
                                               !SessionHelper.IsMEAdmin)
                                            @Html.ValidationMessageFor(q => q.OrganizationSetting.SandataPassword)
                                        </div>
                                    </div>

                                    <div class="form-group col-lg-4 col-md-4 col-sm-6 col-xs-12">
                                        <label class="control-label">
                                            @Resource.SandataIsProduction
                                        </label>
                                        <div class="input-group-sm">
                                            <input id="SandataIsProduction" class="unicheckbox" type="checkbox"
                                                   data-ng-checked="SettingModel.SandataIsProduction"
                                                   data-ng-click="onChecked('SandataIsProduction')"
                                                   val="SettingModel.SandataIsProduction">
                                        </div>
                                    </div>
                                </div>
                            </div>


                        }
                        <div class="fscontainer" style="margin-left:15px; margin-right:15px">
                            <div class="legend">
                                @Resource.ScheduleType
                            </div>
                            <div class="inner-col" style="padding:10px;">
                                <div class="form-group">
                                    <input checked="checked" id="checkEnforce" name="Enforce" type="checkbox" value="true" ng-checked="SettingModel.EnforceAcrossAllClients" />
                                    <input name="Enforce" type="hidden" value="false" ng-checked="!SettingModel.EnforceAcrossAllClients" /> @Resource.EnforceAcrossAllClients
                                    <br />
                                    <input type="radio" id="radioStrictly" name="settings" value="true" ng-checked="SettingModel.ScheduleType" ng-click="RadioSelectChange('Y')"> @Resource.ScheduleTypeStrictly
                                    <br />
                                    <input type="radio" id="radioFlexible" name="settings" value="false" ng-checked="!SettingModel.ScheduleType" ng-click="RadioSelectChange('N')"> @Resource.ScheduleTypeFlexible
                                    <br />
                                </div>
                            </div>
                        </div>
                        <div class="fscontainer" style="margin-left:15px; margin-right:15px">
                            <div class="legend">
                                @Resource.EnvironmentType
                            </div>
                            <div class="inner-col" style="padding:10px;">
                                <div class="form-group">
                                    
                                    <input type="radio" id="radioEnvironmentType" name="radioEnvironmentType" value="false" ng-checked="!SettingModel.EnvironmentType" ng-click="RadioSelectEnvironemnt('N')"> @Resource.Demo
                                    <br />
                                    <input type="radio" id="radioEnvironmentType" name="radioEnvironmentType" value="true" ng-checked="SettingModel.EnvironmentType" ng-click="RadioSelectEnvironemnt('Y')"> @Resource.Live
                                    <br />
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="col-md-12 text-center">
                <input type="submit" data-ng-click="Save()" class="btn btn-sm green-jungle" value="@Resource.Save" />
                <a href="@Constants.HCDashboardURL" class="wzd-cancel">
                    <input type="button" class="btn btn-sm red-mint" value="@Resource.Cancel" />
                </a>
            </div>
        </div>
    </form>

    <div class="modal fade" id="TestEmailModal" tabindex="-1" role="dialog" aria-labelledby="TestEmailLabel">
        <div class="modal-dialog" role="document">
            <form id="frmnewrole">
                <div class="modal-content ">
                    <div class="modal-header caption-desc ">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group col-sm-12">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    <h4 class="modal-title" id="H1">@Resource.TestEmail</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="form-group col-sm-12">
                                        <div class="form-group col-lg-12 col-md-12 col-sm-12">
                                            <label class="control-label">@Resource.To</label>
                                            @Html.TextBoxFor(q => q.OrganizationSetting.ToEmail,
                                              new
                                              {
                                                  @class = "form-control input-sm",
                                                  data_ng_model = "SettingModel.ToEmail",
                                                  placeholder = @Resource.ToEmail,
                                                  maxlength = 200
                                              })
                                            @Html.ValidationMessageFor(q => q.OrganizationSetting.ToEmail)
                                        </div>

                                        <div class="form-group col-lg-12 col-md-12 col-sm-12">
                                            <label class="control-label">@Resource.CC</label>
                                            @Html.TextBoxFor(q => q.OrganizationSetting.CC,
                                              new
                                              {
                                                  @class = "form-control input-sm",
                                                  data_ng_model = "SettingModel.CC",
                                                  placeholder = @Resource.CC,
                                                  maxlength = 200
                                              })
                                            @Html.ValidationMessageFor(q => q.OrganizationSetting.CC)
                                        </div>

                                        <div class="form-group col-lg-12 col-md-12 col-sm-12">
                                            <label class="control-label">@Resource.Body</label>
                                            @Html.TextAreaFor(q => q.OrganizationSetting.Body,
                                                 new
                                                 {
                                                          @class = "form-control input-sm",
                                                          data_ng_model = "SettingModel.Body",
                                                          placeholder = @Resource.Body,
                                                          rows = 3
                                                 })
                                            @Html.ValidationMessageFor(q => q.OrganizationSetting.Body)
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group col-sm-12">
                                    <input type="button" class="btn btn-danger" data-dismiss="modal" value="@Resource.Cancel" />
                                    <input type="submit" data-ng-click="SendTestEmail()" class="btn green-jungle " value="@Resource.Send" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

