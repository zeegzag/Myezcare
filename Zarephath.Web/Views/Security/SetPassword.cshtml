@model SetPasswordModel
@{
    ViewBag.Title = string.Format("{0} {1}", Resource.ZarePhath, Resource.SetPassword);
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}
@Html.Hidden("hdnLoginModel", Common.SerializeObject(Model))

<section class="loginWrapper">
    <div class="cstmContainer">
        <div class="rightWrapper">
            <div class="formWrapper">
                <div class="headingContent">
                    <h4>Login into account</h4>
                    <p>Use your credentials to access your account.</p>
                </div>
                <div data-ng-controller="SetPasswordController">
                    <form class="login-form" role="form" method="POST" id="frmSetPassword">
                        <div class="form-group">
                            <label class="control-label visible-ie8 visible-ie9">@Resource.Password</label>
                            @Html.PasswordFor(m => m.Password, new { data_ng_model = "SetPasswordModel.Password", placeholder = "Password", @class = "form-control form-control-solid placeholder-no-fix" })
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>
                        <div class="form-group">
                            <label class="control-label visible-ie8 visible-ie9">@Resource.ConfirmPassword</label>
                            @Html.PasswordFor(m => m.ConfirmPassword, new { data_ng_model = "SetPasswordModel.ConfirmPassword", placeholder = "Confirm Password", @class = "form-control form-control-solid placeholder-no-fix" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                        </div>
                        <div class="">
                            @Html.DropDownListFor(p => p.SecurityQuestionID, Model.SecurityQuestionList.ToSelectList(Model.SecurityQuestionID.ToString() ?? "", "Question", "SecurityQuestionID", @Resource.SelectSecurityQuestion, ""),
                            new
                            {
                                data_ng_model = "SetPasswordModel.SecurityQuestionID",
                                data_ng_init = "SetPasswordModel.SecurityQuestionID=SetPasswordModel.SecurityQuestionID==''?null:SetPasswordModel.SecurityQuestionID.toString()",
                                @class = "form-control",
                                data_ng_setname = "SetPasswordModel.Question"
                            })
                            @Html.ValidationMessageFor(q => q.SecurityQuestionID)
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(q => q.SecurityAnswer, new { data_ng_model = "SetPasswordModel.SecurityAnswer", @class = "form-control", maxlength = 50, placeholder = @Resource.EnterSecurityAnswer })
                            @Html.ValidationMessageFor(q => q.SecurityAnswer)
                        </div>
                        @*<div class="form-group">
            <input required="" class="form-control" name="text" type="text" placeholder="Answer">
        </div>*@
                        <button class="btn uppercase btn-block btn-cstm" data-ng-click="SetPassword()">@Resource.Save</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="leftWrapper">
            <div class="logoContainer">
                <img src="../Assets/images/myezcaresimpleyetpowerful_Logo.png" alt="Logo">
            </div>
            <div style="padding-top:46px;">
                @*<h2>Announcement <span class="icon"><img src="../Assets/images/promotion.svg" alt="icon"></span></h2>*@
                <h2>Create Strong & Secure Password</h2>
                <div class="Securitypoint">
                    <ul style="padding-top:9px;">
                        <li style="padding-bottom: 5px;">Creating a strong and secure password is an important part of protecting your myEZcare Account.  </li>
                        <li style="padding-bottom: 5px;">
                            Here are some tips for creating a strong password:<br />
                            1. Use at least 8 characters<br />
                            2. Use a mix of letters (uppercase and lowercase), numbers and symbols<br />
                            3. Don't use your name, username or account name<br />
                            4. Avoid predictable passwords such as "password", "12345" or "myezcare"<br />
                        </li>
                        <li style="padding-bottom: 5px;">Security questions are used as an extra level of security to verify identify as the legitimate owner of the account when you’ve forgotten your password or are otherwise trying to recover your account.</li>
                        <li style="padding-bottom: 5px;">Your security answer should be something memorable for you, but impossible someone to predict or guess.</li>
                        <li style="padding-bottom: 5px;"> Do not share your password or security answer with anyone, and never allow others to log into your myEZcare account.</li>
                        <li style="padding-bottom: 5px;">In order to change your password or your security question and answer, you need to know your current password or security answer. If you have forgotten either of them please contact your Super Admin.</li>

                            @*<p>Creating a strong and secure password is an important part of protecting your myEZcare Account.  </p>
        <p>Creating a strong and secure password is an important part of protecting your myEZcare Account.  </p>*@
</ul>
                </div>
                @*<div>
            <div class="post-inner-content">
                <header class="entry-header page-header">

                    <h1 class="entry-title ">@Model.Announcement.Title</h1>
                    <div class="entry-meta">
                        <span class="posted-on">
                            Posted On: <i class="fa fa-calendar"></i>
                            <time class="entry-date published">@Model.Announcement.Date</time>

                            <time class="entry-date published"></time>
                        </span>
                    </div>
                </header>
                <div class="col-md-12 entry-content announcement-Content">
                    @Html.Raw(Model.Announcement.Description);
                </div>
            </div>
        </div>*@
            </div>
        </div>

    </div>
</section>

@section Scripts{
    @Scripts.Render("~/assets/js/viewJS/loginApp/security/setpassword")
    <script>
        var PasswordSetSuccessfullyForAdmin = '@Resource.PasswordSetSuccessfullyForAdmin';
        var PasswordSetSuccessfullyForOther = '@Resource.PasswordSetSuccessfullyForOther';
    </script>
}
