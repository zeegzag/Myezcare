@model AddReferralModel

@Html.Hidden("hdnAddReferralModel", Common.SerializeObject(Model))

@*{{ZSPServiceErrorCount}}*@
<div>
    <h4><strong>@Resource.InternalDocuments</strong></h4>
    <hr class="clear-both" />
    <div>

        <div class="row">
            <div class="form-group col-lg-2 col-md-3 col-sm-4">
                <label class="control-label required">
                    @Resource.Care<br />
                    @Resource.Consent
                </label>
                <div class="input-group-sm">
                    @Html.DropDownListFor(p => p.Referral.CareConsent, Model.CareConsentList.ToSelectList(Model.Referral.CareConsent.ToString() ?? "", "Name", "Value", "", ""),
                                          new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.CareConsent",
                                                  data_ng_init = "ReferralModel.Referral.CareConsent=(ReferralModel.Referral.CareConsent=null?'':ReferralModel.Referral.CareConsent.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.CareConsent"
                                              })
                    @Html.ValidationMessageFor(q => q.Referral.CareConsent)
                </div>
            </div>

            <div class="form-group col-lg-2 col-md-3 col-sm-4">
                <label class="control-label required">
                    @Resource.SelfAdministration<br />
                    @Resource.OfMedication
                </label>
                <div class="input-group-sm">
                    @Html.DropDownListFor(p => p.Referral.SelfAdministrationofMedication, Model.SelfAdministrationList.ToSelectList(Model.Referral.SelfAdministrationofMedication.ToString() ?? "", "Name", "Value", "", ""),
                                          new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.SelfAdministrationofMedication",
                                                  data_ng_init = "ReferralModel.Referral.SelfAdministrationofMedication=(ReferralModel.Referral.SelfAdministrationofMedication=null?'':ReferralModel.Referral.SelfAdministrationofMedication.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.SelfAdministrationofMedication"

                                              })
                    @Html.ValidationMessageFor(q => q.Referral.SelfAdministrationofMedication)
                </div>
            </div>

            <div class="form-group col-lg-2 col-md-3 col-sm-4">
                <label class="control-label required">@Resource.HealthInformationDisclosure</label>
                <div class="input-group-sm">
                    @Html.DropDownListFor(p => p.Referral.HealthInformationDisclosure, Model.HealthInformationList.ToSelectList(Model.Referral.HealthInformationDisclosure.ToString() ?? "", "Name", "Value", "", ""),
                                          new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.HealthInformationDisclosure",
                                                  data_ng_init = "ReferralModel.Referral.HealthInformationDisclosure=(ReferralModel.Referral.HealthInformationDisclosure=null?'':ReferralModel.Referral.HealthInformationDisclosure.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.HealthInformationDisclosure"
                                              })
                    @Html.ValidationMessageFor(q => q.Referral.HealthInformationDisclosure)
                </div>
            </div>

            <div class="form-group col-lg-2 col-md-3 col-sm-4">
                <label class="control-label required">
                    @Resource.Admission
                    <br />
                    @Resource.Requirements
                </label>
                <div class="input-group-sm">
                    @Html.DropDownListFor(p => p.Referral.AdmissionRequirements, Model.AdmissionRequirementList.ToSelectList(Model.Referral.AdmissionRequirements.ToString() ?? "", "Name", "Value", "", ""),
                                          new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.AdmissionRequirements",
                                                  data_ng_init = "ReferralModel.Referral.AdmissionRequirements=(ReferralModel.Referral.AdmissionRequirements=null?'':ReferralModel.Referral.AdmissionRequirements.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.AdmissionRequirements"

                                              })
                    @Html.ValidationMessageFor(q => q.Referral.AdmissionRequirements)
                </div>
            </div>

            <div class="form-group col-lg-2 col-md-3 col-sm-4">
                <label class="control-label required">
                    @Resource.Admission
                    <br />
                    @Resource.Orientation
                </label>
                <div class="input-group-sm">
                    @Html.DropDownListFor(p => p.Referral.AdmissionOrientation, Model.AdmissionOrientationList.ToSelectList(Model.Referral.AdmissionOrientation.ToString() ?? "", "Name", "Value", "", ""),
                                          new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.AdmissionOrientation",
                                                  data_ng_init = "ReferralModel.Referral.AdmissionOrientation=(ReferralModel.Referral.AdmissionOrientation=null?'':ReferralModel.Referral.AdmissionOrientation.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.AdmissionOrientation"
                                              })
                    @Html.ValidationMessageFor(q => q.Referral.AdmissionOrientation)
                </div>
            </div>

            <div class="form-group col-lg-2 col-md-2 col-sm-3">
                <label class="control-label required">
                    @Resource.ZarephathText
                    <br />
                    @Resource.CrisisPlan
                </label>
                <div class="input-group-sm">
                    @Html.DropDownListFor(p => p.Referral.ZarephathCrisisPlan, Model.ZarephathCrisisPlanList.ToSelectList(Model.Referral.ZarephathCrisisPlan ?? "", "Name", "Value", "", ""),
                                          new
                                              {

                                                  data_ng_model = "ReferralModel.Referral.ZarephathCrisisPlan",
                                                  data_ng_init = "ReferralModel.Referral.ZarephathCrisisPlan=(ReferralModel.Referral.ZarephathCrisisPlan=null?'':ReferralModel.Referral.ZarephathCrisisPlan.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.ZarephathCrisisPlan "
                                              })
                    @Html.ValidationMessageFor(q => q.Referral.ZarephathCrisisPlan)
                </div>
            </div>
        </div>

        <div class="row">

            <div class="form-group col-lg-2 col-md-2 col-sm-3">
                <label class="control-label required">
                    @Resource.Permissionfor
                    <br />
                    @Resource.VoiceMail
                </label>
                <div class="input-group-sm">
                    @Html.DropDownListFor(p => p.Referral.PermissionForVoiceMail, Model.VoiceMailList.ToSelectList(Model.Referral.PermissionForVoiceMail.ToString() ?? "", "Name", "Value", "", ""),
                                          new
                                              {
                                                  convert_to_boolean = "",

                                                  data_ng_model = "ReferralModel.Referral.PermissionForVoiceMail",
                                                  data_ng_init = "ReferralModel.Referral.PermissionForVoiceMail=(ReferralModel.Referral.PermissionForVoiceMail=null?'':ReferralModel.Referral.PermissionForVoiceMail.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.PermissionForVoiceMail"
                                              })
                    @Html.ValidationMessageFor(q => q.Referral.PermissionForVoiceMail)
                </div>
            </div>

            <div class="form-group col-lg-2 col-md-2 col-sm-3">
                <label class="control-label required">
                    @Resource.Permissionfor
                    <br />
                    @Resource.Email
                </label>
                <div class="input-group-sm">
                    @Html.DropDownListFor(p => p.Referral.PermissionForEmail, Model.PermissionEmailList.ToSelectList(Model.Referral.PermissionForEmail.ToString() ?? "", "Name", "Value", "", ""),
                                          new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.PermissionForEmail",
                                                  data_ng_init = "ReferralModel.Referral.PermissionForEmail=(ReferralModel.Referral.PermissionForEmail=null?'':ReferralModel.Referral.PermissionForEmail.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.PermissionForEmail"
                                              })
                    @Html.ValidationMessageFor(q => q.Referral.PermissionForEmail)
                </div>
            </div>

            <div class="form-group col-lg-2 col-md-2 col-sm-3">
                <label class="control-label required">
                    @Resource.Permissionfor
                    <br />
                    @Resource.SMS
                </label>
                <div class="input-group-sm">
                    @Html.DropDownListFor(p => p.Referral.PermissionForSMS, Model.PermissionSMSList.ToSelectList(Model.Referral.PermissionForSMS.ToString() ?? "", "Name", "Value", "", ""),
                                          new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.PermissionForSMS",
                                                  data_ng_init = "ReferralModel.Referral.PermissionForSMS=(ReferralModel.Referral.PermissionForSMS=null?'':ReferralModel.Referral.PermissionForSMS.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.PermissionForSMS"
                                              })
                    @Html.ValidationMessageFor(q => q.Referral.PermissionForSMS)
                </div>
            </div>

            <div class="form-group col-lg-2 col-md-2 col-sm-3">
                <label class="control-label required">
                    @Resource.Permissionfor
                    <br />
                    @Resource.Mail
                </label>
                <div class="input-group-sm">
                    @Html.DropDownListFor(p => p.Referral.PermissionForMail, Model.PermissionMailList.ToSelectList(Model.Referral.PermissionForMail.ToString() ?? "", "Name", "Value", "", ""),
                                          new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.PermissionForMail",
                                                  data_ng_init = "ReferralModel.Referral.PermissionForMail=(ReferralModel.Referral.PermissionForMail=null?'':ReferralModel.Referral.PermissionForMail.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.PermissionForMail"
                                              })
                    @Html.ValidationMessageFor(q => q.Referral.PermissionForMail)
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12">
                <div class="row">
                    <div class="form-group col-lg-3 col-md-3 col-sm-3">
                        <strong>@Resource.PreferredCommunicationMethod:</strong>
                    </div>

                    <div class="form-group col-md-5 col-sm-5">
                        <div class="mt-checkbox-inline ">

                            <label class="mt-checkbox mt-checkbox-outline padding-2">
                                <input data-ng-model="ReferralModel.Referral.PCMVoiceMail"
                                    class="uniformControls" data-uniform-value="ReferralModel.Referral.PCMVoiceMail"
                                    type="checkbox">@Resource.VoiceMail<span></span>
                            </label>
                            <label class="mt-checkbox mt-checkbox-outline padding-2">
                                <input data-ng-model="ReferralModel.Referral.PCMEmail"
                                    class="uniformControls" data-uniform-value="ReferralModel.Referral.PCMEmail"
                                    type="checkbox">
                                @Resource.Email<span></span>
                            </label>
                            <label class="mt-checkbox mt-checkbox-outline padding-2">
                                <input data-ng-model="ReferralModel.Referral.PCMSMS"
                                    class="uniformControls" data-uniform-value="ReferralModel.Referral.PCMSMS"
                                    type="checkbox">@Resource.SMS<span></span>
                            </label>
                            <label class="mt-checkbox mt-checkbox-outline padding-2">
                                <input data-ng-model="ReferralModel.Referral.PCMMail"
                                    class="uniformControls" data-uniform-value="ReferralModel.Referral.PCMMail"
                                    type="checkbox">@Resource.Mail<span></span>
                            </label>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="space1"></div>
        <hr />
    </div>

    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="fscontainer">
                <div class="legend">
                    @Resource.ROItoAgency
                </div>

                @*<strong>@Resource.PHIReferringAgency:</strong>*@
                <div class="row">

                    <div class="form-group col-lg-4 col-md-4 col-sm-3">
                        <label class="control-label required">@Resource.ROItoAgency</label>
                        <div class="input-group-sm">
                            @Html.DropDownListFor(p => p.Referral.PHI, Model.PHIList.ToSelectList(Model.Referral.PHI.ToString() ?? "", "Name", "Value", "", ""),
                                                  new
                                                      {
                                                          convert_to_boolean = "",
                                                          data_ng_model = "ReferralModel.Referral.PHI",
                                                          data_ng_init = "ReferralModel.Referral.PHI=(ReferralModel.Referral.PHI=null?'':ReferralModel.Referral.PHI.toString())",
                                                          @class = "form-control  input-sm validateElement",
                                                          data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                          ddlchangecolor = "ReferralModel.Referral.PHI"
                                                      })
                            @Html.ValidationMessageFor(q => q.Referral.PHI)
                        </div>
                    </div>
                    <div class="form-group col-lg-2 col-md-3 col-sm-3">
                        <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.PHI == true}">@Resource.Agency</label>
                        <div class="input-group-sm">
                            @Html.DropDownListFor(p => p.Referral.PHIAgencyID, Model.AgencyList.ToSelectList(Model.Referral.PHIAgencyID.ToString() ?? "", "NickName", "AgencyID", @Resource.SelectAgency, ""),
                                                  new
                                                      {
                                                          convert_to_number = "",
                                                          data_ng_model = "ReferralModel.Referral.PHIAgencyID",
                                                          data_ng_init = "ReferralModel.Referral.PHIAgencyID=ReferralModel.Referral.PHIAgencyID==''?null:ReferralModel.Referral.PHIAgencyID.toString()",
                                                          @class = "form-control  input-sm validateElement",
                                                          data_error_Count = "ReferralErrorCount.ComplianceTab"
                                                      })

                            @Html.ValidationMessageFor(q => q.Referral.PHIAgencyID)
                        </div>
                    </div>

                    <div class="form-group col-lg-2 col-md-3 col-sm-3">
                        <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.PHI == true}">@Resource.ExpirationDate</label>
                        <div id="dateNewDate" class="input-group date" datepicker="ReferralModel.Referral.PHIExpirationDate" data-ng-dateval="ReferralModel.Referral.PHIExpirationDate">

                            @Html.TextBoxFor(m => m.Referral.PHIExpirationDate, new
                                {

                                    @class = "form-control input-sm validateElement dateInputMask",
                                    placeholder = Resource.ExpirationDate,
                                    @maxlength = "10",
                                    data_error_Count = "ReferralErrorCount.ComplianceTab",
                                    changecolorexpireduedate = "changecolorexpireduedate",
                                })
                            @Html.ValidationMessageFor(q => q.Referral.PHIExpirationDate)
                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>

                            @*<input class="form-control input-sm validateElement dateInputMask" data-val="true"
                               data-val-requiredif="@Resource.ExpirationDateRequired"
                               data-val-requiredif-dependentproperty="PHI" data-val-requiredif-rule="required" 
                               data-val-requiredif-targetvalue="true" id="Referral_PHIExpirationDate" maxlength="10" name="Referral.PHIExpirationDate"
                               type="text" data-error-Count="ReferralErrorCount.ComplianceTab" placeholder="@Resource.ExpirationDate">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>*@
                        </div>
                        @*@Html.ValidationMessageFor(q => q.Referral.PHIExpirationDate)*@
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="space15"></div>

    <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="fscontainer groupErrorParent" id="serviceplanrequired">
                <div class="legend">
                    @Resource.ZarephathServicePlan
                </div>


                <div>
                    <input data-val-required="@Resource.ZarePhathServicePlanRequired"
                           data-ng-model="ZSPServiceErrorCount" data-val="true"
                           id="Referral_ZSPServiceErrorCount"
                           class="form-control input-sm groupError hideErrorContent validateElement"
                           data-error-Count="ReferralErrorCount.ComplianceTab"
                           name="Referral.ZSPServiceErrorCount" />
                </div>


                <div class="row">
                    <div class="form-group col-lg-3 col-md-3 col-sm-3">
                        <strong class="required">@Resource.ZarephathServicePlan:</strong>
                    </div>
                    <div class="col-md-5 col-sm-5">
                        <div class="mt-checkbox-inline">
                            <label class="mt-checkbox mt-checkbox-outline">
                                <input data-ng-model="ReferralModel.Referral.RespiteService"
                                    class="uniformControls" data-uniform-value="ReferralModel.Referral.RespiteService"
                                    type="checkbox">@Resource.Respite<span></span>
                            </label>
                            <label class="mt-checkbox mt-checkbox-outline">
                                <input data-ng-model="ReferralModel.Referral.LifeSkillsService" name="Referral.LifeSkillsService"
                                    class="uniformControls" data-uniform-value="ReferralModel.Referral.LifeSkillsService"
                                    type="checkbox">
                                @Resource.LifeSkillsService<span></span>
                            </label>
                            <label class="mt-checkbox mt-checkbox-outline">
                                <input data-ng-model="ReferralModel.Referral.CounselingService"
                                    class="uniformControls" data-uniform-value="ReferralModel.Referral.CounselingService"
                                    type="checkbox">@Resource.Counseling<span></span>
                            </label>

                            <label class="mt-checkbox mt-checkbox-outline padding-left-25">
                                <input data-ng-model="ReferralModel.Referral.ConnectingFamiliesService"
                                    class="uniformControls" data-uniform-value="ReferralModel.Referral.ConnectingFamiliesService"
                                    type="checkbox">**<b>@Resource.ConnectingFamilies</b><span></span>
                            </label>
                        </div>
                    </div>

                </div>

                <div data-ng-show="ReferralModel.Referral.RespiteService || ReferralModel.Referral.LifeSkillsService || ReferralModel.Referral.CounselingService || ReferralModel.Referral.ConnectingFamiliesService">
                    <hr />
                    <strong class="required">@Resource.ZarephathServicePlanDocuments:</strong>
                    <div class="space10"></div>
                    <div class="referralservice" data-ng-show="ReferralModel.Referral.RespiteService">
                        @*<strong>@Resource.Respite</strong>*@
                        <div class="row">

                            <div class="form-group col-lg-4 col-md-4 col-sm-3">
                                <label class="control-label required">@Resource.Respite</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.Referral.ZSPRespite, Model.ZSPRespiteList.ToSelectList(Model.Referral.ZSPRespite.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPRespite",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPRespite=(ReferralModel.Referral.ZSPRespite=null?'':ReferralModel.Referral.ZSPRespite.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPRespite"
                                                              })

                                    @Html.ValidationMessageFor(q => q.Referral.ZSPRespite)
                                </div>
                            </div>

                            <div class="form-group col-lg-2 col-md-3 col-sm-3">
                                <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.ZSPRespite == true}">@Resource.ExpirationDate</label>

                                <div class="input-group date" datepicker="ReferralModel.Referral.ZSPRespiteExpirationDate" ng-dateval="ReferralModel.Referral.ZSPRespiteExpirationDate">@*data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.ZSPRespiteExpirationDate,NewDate)"*@
                                    @*<input class="form-control input-sm validateElement dateInputMask ignore-validation-{{!ReferralModel.Referral.RespiteService}}" data-val="true"
                                               data-val-requiredif="@Resource.ExpirationDateRequired"
                                               data-val-requiredif-targetvalue="true"
                                               data-val-requiredif-dependentproperty="ZSPRespite"
                                               data-val-requiredif-rule="required"
                                               id="Referral_ZSPRespiteExpirationDate" placeholder="@Resource.ExpirationDate"
                                               maxlength="10"
                                               data-error-Count="ReferralErrorCount.ComplianceTab"
                                               name="Referral.ZSPRespiteExpirationDate"
                                               type="text">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>*@
                                    @Html.TextBoxFor(m => m.Referral.ZSPRespiteExpirationDate, new
                                        {
                                            @class = "form-control input-sm validateElement dateInputMask ignore-validation-{{!ReferralModel.Referral.RespiteService}}",
                                            placeholder = Resource.ExpirationDate,
                                            @maxlength = "10",
                                            data_error_Count = "ReferralErrorCount.ComplianceTab",
                                            changecolorexpireduedate = "changecolorexpireduedate"
                                        })
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    @Html.ValidationMessageFor(q => q.Referral.ZSPRespiteExpirationDate)
                                </div>

                            </div>

                            <div class="form-group col-lg-2 col-md-4 col-sm-4">
                                <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.ZSPRespite == true}">@Resource.GuardianSignature</label>
                                <div class="input-group-sm">

                                    @Html.DropDownListFor(p => p.Referral.ZSPRespiteGuardianSignature, Model.ZSPRespiteGuardianSignatureList.ToSelectList(Model.Referral.ZSPRespiteGuardianSignature.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPRespiteGuardianSignature",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPRespiteGuardianSignature=(ReferralModel.Referral.ZSPRespiteGuardianSignature=null?'':ReferralModel.Referral.ZSPRespiteGuardianSignature.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPRespiteGuardianSignature"
                                                              })
                                    @Html.ValidationMessageFor(q => q.Referral.ZSPRespiteGuardianSignature)
                                </div>



                            </div>

                            <div class="form-group col-lg-2 col-md-4 col-sm-4">
                                <label class="control-label required" data-ng-class="{'required':ReferralModel.Referral.ZSPRespite == true}">@Resource.BHPSigned</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.Referral.ZSPRespiteBHPSigned, Model.ZSPRespiteBHPSignedList.ToSelectList(Model.Referral.ZSPRespiteBHPSigned.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPRespiteBHPSigned",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPRespiteBHPSigned=(ReferralModel.Referral.ZSPRespiteBHPSigned=null?'':ReferralModel.Referral.ZSPRespiteBHPSigned.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPRespiteBHPSigned",
                                                                  data_val_required = @Resource.BHPSignedRequired
                                                              })
                                    @Html.ValidationMessageFor(q => q.Referral.ZSPRespiteBHPSigned)
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="lifeskillsservice" data-ng-show="ReferralModel.Referral.LifeSkillsService">
                        @*<strong>@Resource.LifeSkills:</strong>*@
                        <div class="row">

                            <div class="form-group col-lg-4 col-md-4 col-sm-3">
                                <label class="control-label required">@Resource.LifeSkills</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.Referral.ZSPLifeSkills, Model.ZSPLifeSkillsList.ToSelectList(Model.Referral.ZSPLifeSkills.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPLifeSkills",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPLifeSkills=(ReferralModel.Referral.ZSPLifeSkills=null?'':ReferralModel.Referral.ZSPLifeSkills.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPLifeSkills"
                                                              })

                                    @Html.ValidationMessageFor(q => q.Referral.ZSPLifeSkills)
                                </div>
                            </div>

                            <div class="form-group col-lg-2 col-md-4 col-sm-3">
                                <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.ZSPLifeSkills == true}">@Resource.ExpirationDate</label>

                                <div class="input-group date" datepicker="ReferralModel.Referral.ZSPLifeSkillsExpirationDate" ng-dateval="ReferralModel.Referral.ZSPLifeSkillsExpirationDate">@*data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.ZSPLifeSkillsExpirationDate,NewDate)"*@
                                    @*<input class="form-control input-sm validateElement dateInputMask ignore-validation-{{!ReferralModel.Referral.LifeSkillsService}}" data-val="true"
                                               data-val-requiredif="@Resource.ExpirationDateRequired"
                                               data-val-requiredif-dependentproperty="ZSPLifeSkills"
                                               data-val-requiredif-rule="required"
                                               data-val-requiredif-targetvalue="true"
                                               id="Referral_ZSPLifeSkillsExpirationDate"
                                               maxlength="10"
                                               data-error-Count="ReferralErrorCount.ComplianceTab" placeholder="@Resource.ExpirationDate"
                                               name="Referral.ZSPLifeSkillsExpirationDate"
                                               type="text">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>*@

                                    @Html.TextBoxFor(m => m.Referral.ZSPLifeSkillsExpirationDate, new
                                        {
                                            @class = "form-control input-sm validateElement dateInputMask ignore-validation-{{!ReferralModel.Referral.LifeSkillsService}}",
                                            placeholder = Resource.ExpirationDate,
                                            @maxlength = "10",
                                            data_error_Count = "ReferralErrorCount.ComplianceTab",
                                            changecolorexpireduedate = "changecolorexpireduedate"
                                        })
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                </div>
                                @Html.ValidationMessageFor(q => q.Referral.ZSPLifeSkillsExpirationDate)
                            </div>

                            <div class="form-group col-lg-2 col-md-4 col-sm-4">
                                <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.ZSPLifeSkills == true}">@Resource.GuardianSignature</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.Referral.ZSPLifeSkillsGuardianSignature, Model.ZSPLifeSkillsGuardianSignatureList.ToSelectList(Model.Referral.ZSPLifeSkillsGuardianSignature.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPLifeSkillsGuardianSignature",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPLifeSkillsGuardianSignature=(ReferralModel.Referral.ZSPLifeSkillsGuardianSignature=null?'':ReferralModel.Referral.ZSPLifeSkillsGuardianSignature.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPLifeSkillsGuardianSignature",
                                                                  data_val_required = @Resource.GuardianSignatureRequired
                                                              })
                                    @Html.ValidationMessageFor(q => q.Referral.ZSPLifeSkillsGuardianSignature)
                                </div>
                            </div>

                            <div class="form-group col-lg-2 col-md-4 col-sm-4">
                                <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.ZSPLifeSkills == true}">@Resource.BHPSigned</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.Referral.ZSPLifeSkillsBHPSigned, Model.ZSPLifeSkillsBHPSignedList.ToSelectList(Model.Referral.ZSPLifeSkillsBHPSigned.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPLifeSkillsBHPSigned",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPLifeSkillsBHPSigned=(ReferralModel.Referral.ZSPLifeSkillsBHPSigned=null?'':ReferralModel.Referral.ZSPLifeSkillsBHPSigned.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPLifeSkillsBHPSigned",
                                                                  data_val_required = @Resource.BHPSignedRequired
                                                              })
                                    @Html.ValidationMessageFor(q => q.Referral.ZSPLifeSkillsBHPSigned)
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="counsellingservice" data-ng-show="ReferralModel.Referral.CounselingService">
                        @*<strong>@Resource.Counselling:</strong>*@

                        <div class="row">

                            <div class="form-group col-lg-4 col-md-4 col-sm-3">
                                <label class="control-label required">@Resource.Counseling</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.Referral.ZSPCounselling, Model.ZSPCounsellingList.ToSelectList(Model.Referral.ZSPCounselling.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPCounselling",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPCounselling=(ReferralModel.Referral.ZSPCounselling=null?'':ReferralModel.Referral.ZSPCounselling.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPCounselling"
                                                              })

                                    @Html.ValidationMessageFor(q => q.Referral.ZSPCounselling)
                                </div>
                            </div>

                            <div class="form-group col-lg-2 col-md-4 col-sm-3">
                                <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.ZSPCounselling == true}">@Resource.ExpirationDate</label>

                                <div class="input-group date" datepicker="ReferralModel.Referral.ZSPCounsellingExpirationDate" ng-dateval="ReferralModel.Referral.ZSPCounsellingExpirationDate">
                                    @*data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.ZSPCounsellingExpirationDate,NewDate)"*@
                                    @*<input class="form-control input-sm validateElement dateInputMask ignore-validation-{{!ReferralModel.Referral.CounselingService}}" data-val="true"
                                               data-val-requiredif="@Resource.ExpirationDateRequired" data-val-requiredif-dependentproperty="ZSPCounselling" data-val-requiredif-rule="required" data-val-requiredif-targetvalue="true" id="Referral_ZSPCounsellingExpirationDate" maxlength="10" name="Referral.ZSPCounsellingExpirationDate"
                                               type="text" placeholder="@Resource.ExpirationDate" data-error-Count="ReferralErrorCount.ComplianceTab">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>*@
                                    @Html.TextBoxFor(m => m.Referral.ZSPCounsellingExpirationDate, new
                                        {
                                            @class = "form-control input-sm validateElement dateInputMask ignore-validation-{{!ReferralModel.Referral.CounselingService}}",
                                            placeholder = Resource.ExpirationDate,
                                            @maxlength = "10",
                                            data_error_Count = "ReferralErrorCount.ComplianceTab",
                                            changecolorexpireduedate = "changecolorexpireduedate"
                                        })
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                </div>
                                @Html.ValidationMessageFor(q => q.Referral.ZSPCounsellingExpirationDate)
                            </div>

                            <div class="form-group col-lg-2 col-md-4 col-sm-4">
                                <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.ZSPCounselling == true}">@Resource.GuardianSignature</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.Referral.ZSPCounsellingGuardianSignature, Model.ZSPCounsellingGuardianSignatureList.ToSelectList(Model.Referral.ZSPCounsellingGuardianSignature.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPCounsellingGuardianSignature",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPCounsellingGuardianSignature=(ReferralModel.Referral.ZSPCounsellingGuardianSignature=null?'':ReferralModel.Referral.ZSPCounsellingGuardianSignature.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPCounsellingGuardianSignature",
                                                                  data_val_required = @Resource.GuardianSignatureRequired
                                                              })
                                    @Html.ValidationMessageFor(q => q.Referral.ZSPCounsellingGuardianSignature)
                                </div>
                            </div>

                            <div class="form-group col-lg-2 col-md-4 col-sm-4">
                                <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.ZSPCounselling == true}">@Resource.BHPSigned</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.Referral.ZSPCounsellingBHPSigned, Model.ZSPCounsellingBHPSignedList.ToSelectList(Model.Referral.ZSPCounsellingBHPSigned.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPCounsellingBHPSigned",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPCounsellingBHPSigned=(ReferralModel.Referral.ZSPCounsellingBHPSigned=null?'':ReferralModel.Referral.ZSPCounsellingBHPSigned.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPCounsellingBHPSigned",
                                                                  data_val_required = @Resource.BHPSignedRequired
                                                              })
                                    @Html.ValidationMessageFor(q => q.Referral.ZSPCounsellingBHPSigned)
                                </div>
                            </div>

                        </div>

                    </div>



                    <div class="ConnectingServices" data-ng-show="ReferralModel.Referral.ConnectingFamiliesService">
                        @*<strong>@Resource.Respite</strong>*@
                        <div class="row">

                            <div class="form-group col-lg-4 col-md-4 col-sm-3">
                                <label class="control-label required">@Resource.ConnectingFamilies</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.Referral.ZSPConnectingFamilies, Model.ZSPRespiteList.ToSelectList(Model.Referral.ZSPRespite.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPConnectingFamilies",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPConnectingFamilies=(ReferralModel.Referral.ZSPConnectingFamilies=null?'':ReferralModel.Referral.ZSPConnectingFamilies.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPConnectingFamilies"
                                                              })

                                    @Html.ValidationMessageFor(q => q.Referral.ZSPConnectingFamilies)
                                </div>
                            </div>

                            <div class="form-group col-lg-2 col-md-3 col-sm-3">
                                <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.ZSPConnectingFamilies == true}">@Resource.ExpirationDate</label>
                                <div class="input-group date" datepicker="ReferralModel.Referral.ZSPConnectingFamiliesExpirationDate" ng-dateval="ReferralModel.Referral.ZSPConnectingFamiliesExpirationDate">@*data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.ZSPRespiteExpirationDate,NewDate)"*@
                                    @Html.TextBoxFor(m => m.Referral.ZSPConnectingFamiliesExpirationDate, new
                                        {
                                            @class = "form-control input-sm validateElement dateInputMask ignore-validation-{{!ReferralModel.Referral.ConnectingFamiliesService}}",
                                            placeholder = Resource.ExpirationDate,
                                            @maxlength = "10",
                                            data_error_Count = "ReferralErrorCount.ComplianceTab",
                                            changecolorexpireduedate = "changecolorexpireduedate"
                                        })
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    @Html.ValidationMessageFor(q => q.Referral.ZSPConnectingFamiliesExpirationDate)
                                </div>
                            </div>

                            <div class="form-group col-lg-2 col-md-4 col-sm-4">
                                <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.ZSPConnectingFamilies == true}">@Resource.GuardianSignature</label>
                                <div class="input-group-sm">

                                    @Html.DropDownListFor(p => p.Referral.ZSPConnectingFamiliesGuardianSignature, Model.ZSPRespiteGuardianSignatureList.ToSelectList(Model.Referral.ZSPConnectingFamiliesGuardianSignature.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPConnectingFamiliesGuardianSignature",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPConnectingFamiliesGuardianSignature=(ReferralModel.Referral.ZSPConnectingFamiliesGuardianSignature=null?'':ReferralModel.Referral.ZSPConnectingFamiliesGuardianSignature.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPConnectingFamiliesGuardianSignature"
                                                              })
                                    @Html.ValidationMessageFor(q => q.Referral.ZSPConnectingFamiliesGuardianSignature)
                                </div>



                            </div>

                            <div class="form-group col-lg-2 col-md-4 col-sm-4">
                                <label class="control-label required" data-ng-class="{'required':ReferralModel.Referral.ZSPConnectingFamilies == true}">@Resource.BHPSigned</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.Referral.ZSPConnectingFamiliesBHPSigned, Model.ZSPRespiteBHPSignedList.ToSelectList(Model.Referral.ZSPConnectingFamiliesBHPSigned.ToString() ?? "", "Name", "Value", "", ""),
                                                          new
                                                              {
                                                                  convert_to_boolean = "",
                                                                  data_ng_model = "ReferralModel.Referral.ZSPConnectingFamiliesBHPSigned",
                                                                  data_ng_init = "ReferralModel.Referral.ZSPConnectingFamiliesBHPSigned=(ReferralModel.Referral.ZSPConnectingFamiliesBHPSigned=null?'':ReferralModel.Referral.ZSPConnectingFamiliesBHPSigned.toString())",
                                                                  @class = "form-control  input-sm validateElement",
                                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                                  ddlchangecolor = "ReferralModel.Referral.ZSPConnectingFamiliesBHPSigned",
                                                                  data_val_required = @Resource.BHPSignedRequired
                                                              })
                                    @Html.ValidationMessageFor(q => q.Referral.ZSPConnectingFamiliesBHPSigned)
                                </div>
                            </div>

                        </div>
                    </div>



                </div>



            </div>
        </div>
    </div>

    <div class="row" data-ng-show="ReferralModel.Referral.LifeSkillsService">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="fscontainer">
                <div class="legend">
                    @Resource.AnsellCaseyAssessmentLifeSkills
                </div>
                <div class="row">

                    <div class="form-group col-lg-3 col-md-3 col-sm-3">
                        <label class="control-label required">@Resource.AnsellCaseyAssessment</label>
                        <div class="input-group-sm">
                            @Html.DropDownListFor(p => p.Referral.ACAssessment, Model.ACAssessmentList.ToSelectList(Model.Referral.ACAssessment.ToString() ?? "", "Name", "Value", "", ""),
                                                  new
                                                      {
                                                          convert_to_boolean = "",
                                                          data_ng_model = "ReferralModel.Referral.ACAssessment",
                                                          data_ng_init = "ReferralModel.Referral.ACAssessment=(ReferralModel.Referral.ACAssessment=null?'':ReferralModel.Referral.ACAssessment.toString())",
                                                          @class = "form-control  input-sm validateElement",
                                                          data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                          ddlchangecolor = "ReferralModel.Referral.ACAssessment"
                                                      })
                            @Html.ValidationMessageFor(q => q.Referral.ACAssessment)
                        </div>
                    </div>

                    <div class="form-group col-lg-2 col-md-3 col-sm-3">
                        <label class="control-label" data-ng-class="{'required':(ReferralModel.Referral.ACAssessment == true && ReferralModel.Referral.LifeSkillsService==true) }">@Resource.ExpirationDate</label>

                        <div class="input-group date " datepicker="ReferralModel.Referral.ACAssessmentExpirationDate" ng-dateval="ReferralModel.Referral.ACAssessmentExpirationDate">@* data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.ACAssessmentExpirationDate,NewDate)"*@
                            @*<input class="form-control input-sm validateElement dateInputMask" data-val="true"
                                       data-val-requiredif="@Resource.ExpirationDateRequired" placeholder="@Resource.ExpirationDate" data-val-requiredif-dependentproperty="ACAssessment"
                                       data-val-requiredif-rule="required" data-val-requiredif-targetvalue="true" id="Referral_ACAssessmentExpirationDate" maxlength="10" name="Referral.ACAssessmentExpirationDate"
                                       type="text" data-error-Count="ReferralErrorCount.ComplianceTab">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>*@
                            @Html.TextBoxFor(m => m.Referral.ACAssessmentExpirationDate, new
                                {
                                    @class = "form-control input-sm validateElement dateInputMask",
                                    placeholder = Resource.ExpirationDate,
                                    @maxlength = "10",
                                    data_error_Count = "ReferralErrorCount.ComplianceTab",
                                    changecolorexpireduedate = "changecolorexpireduedate",
                                })
                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                        </div>
                        @Html.ValidationMessageFor(q => q.Referral.ACAssessmentExpirationDate)
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


<div class="space30"></div>
<h4><strong>@Resource.ExternalDocuments</strong></h4>
<hr class="clear-both" />
@*<div class="space15"></div>*@

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="fscontainer">
            <div class="legend">
                @Resource.ROIFromAgency
            </div>
            <div class="row">

                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label required">@Resource.ROIFromAgency</label>
                    <div class="input-group-sm">
                        @Html.DropDownListFor(p => p.Referral.AROI, Model.ROIList.ToSelectList(Model.Referral.AROI.ToString() ?? "", "Name", "Value", "", ""),
                                              new
                                              {
                                                  //convert_to_number = "",
                                                  data_ng_model = "ReferralModel.Referral.AROI",
                                                  data_ng_init = "ReferralModel.Referral.AROI=(ReferralModel.Referral.AROI=null?'':ReferralModel.Referral.AROI.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.AROI"
                                              })

                        @Html.ValidationMessageFor(q => q.Referral.AROI)
                    </div>
                </div>

                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.AROI == true}">@Resource.Agency</label>
                    <div class="input-group-sm">

                        @Html.DropDownListFor(p => p.Referral.AROIAgencyID, Model.AgencyList.ToSelectList(Model.Referral.AROIAgencyID.ToString() ?? "", "NickName", "AgencyID", @Resource.SelectAgency, ""),
                                              new
                                              {
                                                  convert_to_number = "",
                                                  data_ng_model = "ReferralModel.Referral.AROIAgencyID",
                                                  data_ng_init = "ReferralModel.Referral.AROIAgencyID=ReferralModel.Referral.AROIAgencyID==''?null:ReferralModel.Referral.AROIAgencyID.toString()",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.AROIAgencyID"
                                              })
                        @Html.ValidationMessageFor(q => q.Referral.AROIAgencyID)

                    </div>
                </div>

                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.AROI == true}">@Resource.ExpirationDate</label>
                    <div class="input-group date" datepicker="ReferralModel.Referral.AROIExpirationDate" ng-dateval="ReferralModel.Referral.AROIExpirationDate">@* data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.AROIExpirationDate,NewDate)"*@
                        @*<input class="form-control input-sm validateElement dateInputMask" data-val="true"
                               data-val-requiredif="@Resource.ExpirationDateRequired"
                               data-val-requiredif-dependentproperty="AROI"
                               data-val-requiredif-rule="required"
                               data-val-requiredif-targetvalue="true"
                               id="Referral_AROIExpirationDate"
                               maxlength="10"
                               data-error-Count="ReferralErrorCount.ComplianceTab"
                               name="Referral.AROIExpirationDate" placeholder="@Resource.ExpirationDate"
                               type="text">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>*@
                        @Html.TextBoxFor(m => m.Referral.AROIExpirationDate, new
                   {
                       @class = "form-control input-sm validateElement dateInputMask",
                       placeholder = Resource.ExpirationDate,
                       @maxlength = "10",
                       data_error_Count = "ReferralErrorCount.ComplianceTab",
                       //changecolorexpireduedate = "changecolorexpireduedate"
                   })
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                        @Html.ValidationMessageFor(q => q.Referral.AROIExpirationDate)

                    </div>
                </div>



            </div>

        </div>
    </div>
</div>

<div class="space15"></div>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="fscontainer">
            <div class="legend">
                @Resource.NetworkCrisisPlan
            </div>

            <div class="row networkservice">

                <div class="form-group col-lg-2 col-md-2 col-sm-4">
                    <label class="control-label required">@Resource.NetworkCrisisPlan</label>
                    <div class="input-group-sm">
                        @Html.DropDownListFor(p => p.Referral.NetworkCrisisPlan, Model.NetworkCrisisPlanList.ToSelectList(Model.Referral.NetworkCrisisPlan.ToString() ?? "", "Name", "Value", "", ""),
                                      new
                                      {
                                          //convert_to_boolean = "",
                                          data_ng_model = "ReferralModel.Referral.NetworkCrisisPlan",
                                          data_ng_init = "ReferralModel.Referral.NetworkCrisisPlan=(ReferralModel.Referral.NetworkCrisisPlan=null?'':ReferralModel.Referral.NetworkCrisisPlan.toString())",
                                          @class = "form-control  input-sm validateElement",
                                          data_error_Count = "ReferralErrorCount.ComplianceTab",
                                          ddlchangecolor = "ReferralModel.Referral.NetworkCrisisPlan"
                                      })
                        @Html.ValidationMessageFor(q => q.Referral.NetworkCrisisPlan)
                    </div>
                </div>

                @*<div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.NetworkCrisisPlan == true}">@Resource.ExpirationDate</label>

                    <div class="input-group date" datepicker="ReferralModel.Referral.NCPExpirationDate" ng-dateval="ReferralModel.Referral.NCPExpirationDate" data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.NCPExpirationDate,NewDate)">
                        @Html.TextBoxFor(m => m.Referral.NCPExpirationDate, new
                   {
                       @class = "form-control input-sm validateElement dateInputMask",
                       placeholder = Resource.ExpirationDate,
                       @maxlength = "10",
                       data_error_Count = "ReferralErrorCount.ComplianceTab"
                   })
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(q => q.Referral.NCPExpirationDate)
                </div>*@

            </div>

        </div>
    </div>
</div>

<div class="space15"></div>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="fscontainer">
            <div class="legend">
                @Resource.NetworkServicePlan
            </div>

            <div class="row networkservice">

                <div class="form-group col-lg-2 col-md-2 col-sm-4">
                    <label class="control-label required">@Resource.NetworkServicePlan</label>
                    <div class="input-group-sm">
                        @Html.DropDownListFor(p => p.Referral.NetworkServicePlan, Model.NetworkServicePlanList.ToSelectList(Model.Referral.NetworkServicePlan.ToString() ?? "", "Name", "Value", "", ""),
                                              new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.NetworkServicePlan",
                                                  data_ng_init = "ReferralModel.Referral.NetworkServicePlan=(ReferralModel.Referral.NetworkServicePlan=null?'':ReferralModel.Referral.NetworkServicePlan.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.NetworkServicePlan"
                                              })
                        @Html.ValidationMessageFor(q => q.Referral.NetworkServicePlan)
                    </div>
                </div>

                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.NetworkServicePlan == true}">@Resource.ExpirationDate</label>

                    <div class="input-group date" datepicker="ReferralModel.Referral.NSPExpirationDate" ng-dateval="ReferralModel.Referral.NSPExpirationDate">@* data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.NSPExpirationDate,NewDate)"*@
                        @*<input class="form-control input-sm dateInputMask validateElement" data-val="true"
                                       data-val-requiredif="@Resource.ExpirationDateRequired"
                                       data-val-requiredif-dependentproperty="NetworkServicePlan" placeholder="@Resource.ExpirationDate"
                                       data-val-requiredif-rule="required"
                                       data-val-requiredif-targetvalue="true"
                                       id="Referral_NSPExpirationDate"
                                       maxlength="10"
                                       name="Referral.NSPExpirationDate"
                                       type="text"
                                       data-error-Count="ReferralErrorCount.ComplianceTab">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>*@
                        @Html.TextBoxFor(m => m.Referral.NSPExpirationDate, new
                   {
                       @class = "form-control input-sm validateElement dateInputMask",
                       placeholder = Resource.ExpirationDate,
                       @maxlength = "10",
                       data_error_Count = "ReferralErrorCount.ComplianceTab",
                       changecolorexpireduedate = "changecolorexpireduedate"
                   })
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(q => q.Referral.NSPExpirationDate)
                </div>

                <div class="form-group col-lg-2 col-md-3 col-sm-4">
                    <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.NetworkServicePlan == true}">@Resource.GuardianSignature</label>
                    <div class="input-group-sm">
                        @Html.DropDownListFor(p => p.Referral.NSPGuardianSignature, Model.NetworkServiceGuardianSignatureList.ToSelectList(Model.Referral.NSPGuardianSignature.ToString() ?? "", "Name", "Value", "", ""),
                                              new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.NSPGuardianSignature",
                                                  data_ng_init = "ReferralModel.Referral.NSPGuardianSignature=(ReferralModel.Referral.NSPGuardianSignature=null?'':ReferralModel.Referral.NSPGuardianSignature.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.NSPGuardianSignature",
                                                  data_val_required = @Resource.GuardianSignatureRequired
                                              })
                        @Html.ValidationMessageFor(q => q.Referral.NSPGuardianSignature)
                    </div>
                </div>

                <div class="form-group col-lg-2 col-md-3 col-sm-4">
                    <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.NetworkServicePlan == true}">@Resource.BHPSigned</label>
                    <div class="input-group-sm">
                        @Html.DropDownListFor(p => p.Referral.NSPBHPSigned, Model.NetworkServiceBHPSignedList.ToSelectList(Model.Referral.NSPBHPSigned.ToString() ?? "", "Name", "Value", "", ""),
                                              new
                                              {
                                                  convert_to_boolean = "",
                                                  data_ng_model = "ReferralModel.Referral.NSPBHPSigned",
                                                  data_ng_init = "ReferralModel.Referral.NSPBHPSigned=(ReferralModel.Referral.NSPBHPSigned=null?'':ReferralModel.Referral.NSPBHPSigned.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.NSPBHPSigned",
                                                  data_val_required = @Resource.BHPSignedRequired

                                              })
                        @Html.ValidationMessageFor(q => q.Referral.NSPBHPSigned)
                    </div>
                </div>

            </div>
            <div class="row networkservice">
                <div class="form-group col-lg-4 col-md-4  col-sm-8">
                    <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.NetworkServicePlan == true}">@Resource.NSPSPidentifyServiceListMessage</label>
                    <div class="input-group-sm">
                        @*@Html.DropDownListFor(p => p.Referral.NSPSPidentifyService, Model.NSPSPidentifyServiceList.ToSelectList(Model.Referral.NSPSPidentifyService.ToString() ?? "", "Name", "Value", "", ""),
                                                  new
                                                  {
                                                      convert_to_boolean = "",
                                                      data_ng_model = "ReferralModel.Referral.NSPSPidentifyService",
                                                      data_ng_init = "ReferralModel.Referral.NSPSPidentifyService=(ReferralModel.Referral.NSPSPidentifyService=null?'':ReferralModel.Referral.NSPSPidentifyService.toString())",
                                                      @class = "form-control  input-sm validateElement",
                                                      data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                      ddlchangecolor = "ReferralModel.Referral.NSPSPidentifyService",
                                                      data_val_required = @Resource.IdentifyServiceRequired

                                                  })*@
                        @Html.DropDownListFor(p => p.Referral.NSPSPidentifyService, Model.NSPSPidentifyServiceList.ToSelectList(Model.Referral.NSPSPidentifyService ?? "", "Name", "Value", "", ""),
                                          new
                                              {

                                                  data_ng_model = "ReferralModel.Referral.NSPSPidentifyService",
                                                  data_ng_init = "ReferralModel.Referral.NSPSPidentifyService=(ReferralModel.Referral.NSPSPidentifyService=null?'':ReferralModel.Referral.NSPSPidentifyService.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.NSPSPidentifyService "
                                              })
                        @Html.ValidationMessageFor(q => q.Referral.NSPSPidentifyService)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="space15"></div>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="fscontainer">
            <div class="legend">
                @Resource.BXAssessment
            </div>

            <div class="row">
                <div class="form-group col-lg-2 col-md-4 col-sm-6">
                    <label class="control-label required">@Resource.BXAssessment</label>
                    <div class="input-group-sm">
                        @Html.DropDownListFor(p => p.Referral.BXAssessment, Model.BXAssessmentList.ToSelectList(Model.Referral.BXAssessment.ToString() ?? "", "Name", "Value", "", ""),
                            new
                            {
                                convert_to_boolean = "",
                                data_ng_model = "ReferralModel.Referral.BXAssessment",
                                data_ng_init = "ReferralModel.Referral.BXAssessment=(ReferralModel.Referral.BXAssessment=null?'':ReferralModel.Referral.BXAssessment.toString())",
                                @class = "form-control  input-sm validateElement",
                                data_error_Count = "ReferralErrorCount.ComplianceTab",
                                ddlchangecolor = "ReferralModel.Referral.BXAssessment",
                            })
                        @Html.ValidationMessageFor(q => q.Referral.BXAssessment)
                    </div>
                </div>

                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.BXAssessment == true}">@Resource.ExpirationDate</label>

                    <div class="input-group  date " datepicker="ReferralModel.Referral.BXAssessmentExpirationDate" ng-dateval="ReferralModel.Referral.BXAssessmentExpirationDate">@* data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.BXAssessmentExpirationDate,NewDate)"*@
                        @*<input class="form-control input-sm validateElement dateInputMask" data-val="true"
                                       data-val-requiredif="@Resource.ExpirationDateRequired" placeholder="@Resource.ExpirationDate" data-val-requiredif-dependentproperty="BXAssessment" data-val-requiredif-rule="required" data-val-requiredif-targetvalue="true" id="Referral_BXAssessmentExpirationDate" maxlength="10" name="Referral.BXAssessmentExpirationDate"
                                       type="text" data-error-Count="ReferralErrorCount.ComplianceTab">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>*@
                        @Html.TextBoxFor(m => m.Referral.BXAssessmentExpirationDate, new
                   {
                       @class = "form-control input-sm validateElement dateInputMask",
                       placeholder = Resource.ExpirationDate,
                       @maxlength = "10",
                       data_error_Count = "ReferralErrorCount.ComplianceTab",
                       changecolorexpireduedate = "changecolorexpireduedate",

                   })
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(q => q.Referral.BXAssessmentExpirationDate)
                </div>

                @* <div class="form-group col-lg-2 col-md-3 col-sm-3">

                                <label class="control-label">@Resource.DXCodes</label>
                                <div class="input-group-sm">
                                    @Html.DropDownListFor(p => p.DXCode`.DXID, Model.DXCodeList.ToSelectList(Model.DXCode.DXID.ToString() ?? "", "DXCodeName", "DXID", @Resource.Select, ""),
                                                      new
                                                          {

                                                              data_ng_model = "ReferralModel.DXCode.DXID",
                                                              data_ng_init = "ReferralModel.DXCode.DXID=(ReferralModel.DXCode.DXID=null?'':ReferralModel.DXCode.DXID.toString())",
                                                              @class = "form-control",
                                                              data_ng_setname = "ReferralModel.DXCode.DXCodeName"


                                                          })
                                </div>
                            </div>*@

                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.BXAssessment == true}">@Resource.BHPSignature</label>
                    <div class="input-group-sm">
                        @Html.DropDownListFor(p => p.Referral.BXAssessmentBHPSigned, Model.BXAssessmentList.ToSelectList(Model.Referral.BXAssessmentBHPSigned.ToString() ?? "", "Name", "Value", "", ""),
                            new
                            {
                                convert_to_boolean = "",
                                data_ng_model = "ReferralModel.Referral.BXAssessmentBHPSigned",
                                data_ng_init = "ReferralModel.Referral.BXAssessmentBHPSigned=(ReferralModel.Referral.BXAssessmentBHPSigned=null?'':ReferralModel.Referral.BXAssessmentBHPSigned.toString())",
                                @class = "form-control  input-sm validateElement",
                                data_error_Count = "ReferralErrorCount.ComplianceTab",

                                ddlchangecolor = "ReferralModel.Referral.BXAssessmentBHPSigned",
                                data_val_required = @Resource.BHPSignedRequired

                            })
                        @Html.ValidationMessageFor(q => q.Referral.BXAssessmentBHPSigned)
                    </div>
                </div>


            </div>

            <div class="row portlet-body compact">
                @Html.TextBoxFor(q => q.DXCodeCount,
                                 new
                                     {
                                         data_ng_model = "ReferralModel.DXCodeCount",
                                         @class = "form-control hideErrorContent replaceErrorSource validateElement",
                                         data_error_Count = "ReferralErrorCount.ComplianceTab",
                                     })

                @Html.ValidationMessageFor(m => m.DXCodeCount)
                <div class=" col-md-12">
                    <div class="replaceErrorDest pull-left">
                        <div class="col-md-12">

                            <h5><strong>@Resource.AddDxCode</strong></h5>
                        </div>
                        <hr class="clear-both" />
                        @*</form>*@
                        @*<form id="frmAddDxCode">*@
                        <div class="col-md-12 no-padding">

                            <div class="form-group col-lg-3 col-md-3 col-sm-6">
                                <label class="control-label required">@Resource.DXCode</label>
                                <div class="" id="dxCodeAuotComplete">
                                    <input token-input type='text'
                                           ng-val='ReferralModel.ReferralDXCodeMapping.DXCodeID'
                                           onresultsformatter='OnDxCodeResultsFormatter'
                                           tokeninputobj='DxCodeTokenInputObj'
                                           @*additional-filter-text='ignoreIds'
                                           additional-filter-value='TempSelectedDXCodeIDs.toString()'*@
                                           textfield='DXCodeName'
                                           valuefield='DXCodeID'
                                           tokenlimit='1'
                                           onaddedcallback="OnDXCodeAdd"
                                           autoSelectFirstResult="false"
                                           minChars="1"
                                           customClass="form-control input-sm"
                                           searchurl='{{GetDXCodeListForAutoCompleteURL}}'
                                           placeholder='@Resource.DXCodes' minChars="0" />
                                </div>
                            </div>
                            <div class="form-group col-lg-2 col-md-2 col-sm-4">
                                <label class="control-label required">
                                    @Resource.StartDate
                                    <i class="fa fa-question-circle" data-ng-tooltip="@Resource.FutureDateNotAllowed"  data-ng-custom-class="tooltip-extra-z-index"></i>
                                </label>
                                <div class="input-group col-md-12" datepicker="ReferralModel.ReferralDXCodeMapping.StartDate"
                                    data-ng-dateval="ReferralModel.ReferralDXCodeMapping.StartDate" data-ng-maxdate="CurrentDate">
                                    @Html.TextBoxFor(q => q.ReferralDXCodeMapping.StartDate,
                                        new
                                            {
                                                @class = "form-control date input-sm dateInputMask",
                                                placeholder = Resource.StartDate
                                            })
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                </div>
                            </div>
                            <div class="form-group col-lg-2 col-md-2 col-sm-4">
                                <label class="control-label required">
                                    @Resource.EndDate
                                </label>
                                <div class="input-group col-md-12" datepicker="ReferralModel.ReferralDXCodeMapping.EndDate"
                                    data-ng-dateval="ReferralModel.ReferralDXCodeMapping.EndDate">
                                    @Html.TextBoxFor(q => q.ReferralDXCodeMapping.EndDate, new { @class = "form-control date input-sm dateInputMask", placeholder = Resource.EndDate })
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                </div>
                            </div>
                            <div class="form-group col-lg-2 col-md-2 col-sm-4">
                                <label class="control-label required">@Resource.Precedence</label>
                                <div class="input-group col-md-12">
                                    @Html.TextBoxFor(q => q.ReferralDXCodeMapping.Precedence, new
                                    {
                                        @class = "form-control input-sm",
                                        data_ng_model = "ReferralModel.ReferralDXCodeMapping.Precedence",
                                        placeholder = Resource.Precedence,
                                        maxlength = 3,
                                        key_press_validation = "Digit"
                                    })
                                </div>
                            </div>
                            @if (Common.HasPermission(Constants.Permission_ReferralDetails_AddUpdate))
                            {
                                <div class="form-group col-lg-2 col-md-2 col-sm-4 margin-top-18">
                                    <a class="btn btn-sm btn-info" data-ng-click="SaveReferralDXCodeMapping()">
                                        <i class="fa fa-save ">&nbsp;&nbsp;</i>@Resource.Add
                                    </a>
                                </div>
                            }
                        </div>
                        @*</form>*@
                        <div class="form-group col-lg-9 col-md-9 col-sm-12 table-responsive" data-ng-if="ReferralModel.DxCodeMappingList.length > 0" data-ng-cloak>
                            <label class="control-label"></label>

                            <div>
                                <table class="table table-advance table-bordered table-striped table-hover table-condensed">
                                    <thead>
                                        <tr>
                                            <th><strong>@Resource.Type</strong></th>
                                            <th><strong>@Resource.DXCode</strong></th>
                                            <th><strong>@Resource.Description</strong></th>
                                            <th class="text-align-center"><strong>@Resource.Precedence</strong></th>
                                            <th class=""><strong>@Resource.StartDate</strong></th>
                                            <th class=""><strong>@Resource.EndDate</strong></th>
                                            <th class="width-10px"><strong>@Resource.Action</strong></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr data-ng-class="{'deleted':dxCode.IsDeleted}" data-ng-repeat="dxCode in ReferralModel.DxCodeMappingList | orderBy:'-StartDate'">
                                            <td>{{dxCode.DxCodeShortName }}</td>
                                            <td>{{(dxCode.DXCodeWithoutDot ? dxCode.DXCodeWithoutDot :'@Resource.NA') +' (' + dxCode.DXCodeName +')'}}</td>
                                            <td>{{dxCode.Description}}</td>
                                            <td class="text-align-center">{{(dxCode.Precedence)? dxCode.Precedence :'@Resource.NA'}}</td>
                                            <td data-ng-if="dxCode.StartDate">{{dxCode.StartDate | dateformat}}</td>
                                            <td data-ng-if="!dxCode.StartDate">@Resource.NA</td>
                                            <td data-ng-if="dxCode.EndDate">{{dxCode.EndDate | dateformat}}</td>
                                            <td data-ng-if="!dxCode.EndDate">@Resource.NA</td>
                                            <td class="text-center">
                                                @if (Common.HasPermission(Constants.Permission_ReferralDetails_AddUpdate))
                                                {
                                                    <a data-ng-click="EditDxCodeFromMapping(dxCode)"><i class="fa fa-edit curser-pointer"></i></a>
                                                    <a data-ng-click="DeleteDxCodeFromMapping(dxCode,'Delete Records')"><i class="fa fa-remove curser-pointer"></i></a>
                                                }
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="space15"></div>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="fscontainer">
            <div class="legend">
                @Resource.Demographic
            </div>
            <div class="row">

                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label required">@Resource.Demographic</label>
                    <div class="input-group-sm">
                        @Html.DropDownListFor(p => p.Referral.Demographic, Model.DemographicList.ToSelectList(Model.Referral.Demographic.ToString() ?? "", "Name", "Value", "", ""),
                                              new
                                              {
                                                  data_ng_model = "ReferralModel.Referral.Demographic",
                                                  data_ng_init = "ReferralModel.Referral.Demographic=(ReferralModel.Referral.Demographic=null?'':ReferralModel.Referral.Demographic.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.Demographic",
                                              })
                        @Html.ValidationMessageFor(q => q.Referral.Demographic)
                    </div>
                </div>

                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label" data-ng-class="{'required':ReferralModel.Referral.Demographic == 'Y'}">@Resource.ExpirationDate</label>

                    <div class="input-group date" datepicker="ReferralModel.Referral.DemographicExpirationDate" ng-dateval="ReferralModel.Referral.DemographicExpirationDate">@* data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.DemographicExpirationDate,NewDate)"*@
                        @* <input class="form-control input-sm validateElement dateInputMask" data-val="true"
                                       data-val-requiredif="@Resource.ExpirationDateRequired" data-val-requiredif-dependentproperty="Demographic"
                                       data-val-requiredif-rule="required" data-val-requiredif-targetvalue="true" placeholder="@Resource.ExpirationDate" id="Referral_DemographicExpirationDate" maxlength="10" name="Referral.DemographicExpirationDate"
                                       type="text" data-error-Count="ReferralErrorCount.ComplianceTab">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>*@
                        @Html.TextBoxFor(m => m.Referral.DemographicExpirationDate, new
                        {
                            @class = "form-control input-sm validateElement dateInputMask",
                            placeholder = Resource.ExpirationDate,
                            @maxlength = "10",
                            data_error_Count = "ReferralErrorCount.ComplianceTab",
                            //changecolorexpireduedate = "changecolorexpireduedate",
                        })
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(q => q.Referral.DemographicExpirationDate)
                </div>




            </div>
        </div>
    </div>
</div>

<div class="space15"></div>

<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12">
        <div class="fscontainer">
            <div class="legend">
                @Resource.SNCD
            </div>
            <div class="row">

                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label required">@Resource.SNCD</label>
                    <div class="input-group-sm">
                        @Html.DropDownListFor(p => p.Referral.SNCD, Model.SNCDList.ToSelectList(Model.Referral.SNCD.ToString() ?? "", "Name", "Value", "", ""),
                                              new
                                              {
                                                  data_ng_model = "ReferralModel.Referral.SNCD",
                                                  data_ng_init = "ReferralModel.Referral.SNCD=(ReferralModel.Referral.SNCD=null?'':ReferralModel.Referral.SNCD.toString())",
                                                  @class = "form-control  input-sm validateElement",
                                                  data_error_Count = "ReferralErrorCount.ComplianceTab",
                                                  ddlchangecolor = "ReferralModel.Referral.SNCD"
                                              })
                        @Html.ValidationMessageFor(q => q.Referral.SNCD)
                    </div>
                </div>

                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label">@Resource.CompletedDate</label>

                    <div class="input-group date" datepicker="ReferralModel.Referral.SNCDExpirationDate" ng-dateval="ReferralModel.Referral.SNCDExpirationDate">@* data-ng-mindate="SetDatePickerDate(ReferralModel.Referral.SNCDExpirationDate,NewDate)"*@
                        @*<input class="form-control input-sm validateElement dateInputMask" data-val="true"
                                       data-val-requiredif="@Resource.ExpirationDateRequired" placeholder="@Resource.ExpirationDate" data-val-requiredif-dependentproperty="SNCD" data-val-requiredif-rule="required" data-val-requiredif-targetvalue="true" id="Referral_SNCDExpirationDate" maxlength="10" name="Referral.SNCDExpirationDate"
                                       type="text" data-error-Count="ReferralErrorCount.ComplianceTab">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>*@
                        @Html.TextBoxFor(m => m.Referral.SNCDExpirationDate, new
                   {
                       @class = "form-control input-sm validateElement dateInputMask",
                       placeholder = Resource.CompletedDate,
                       @maxlength = "10",
                       data_error_Count = "ReferralErrorCount.ComplianceTab",
                       //changecolorexpireduedate = "changecolorexpireduedate",
                   })
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    </div>
                    @Html.ValidationMessageFor(q => q.Referral.SNCDExpirationDate)
                </div>


                <div class="form-group col-lg-2 col-md-3 col-sm-3">
                    <label class="control-label">@Resource.CASIIScore</label>
                    @Html.TextBoxFor(q => q.Referral.CASIIScore,
                         new
                         {
                             @class = "form-control input-sm",
                             dir_valid_number = "",
                             data_ng_model = "ReferralModel.Referral.CASIIScore",
                             @placeholder = Resource.CASIIScore,
                             maxlength = 10
                         })
                    @Html.ValidationMessageFor(q => q.Referral.CASIIScore)
                </div>
            </div>
        </div>
    </div>
</div>

<div class="space15"></div>


