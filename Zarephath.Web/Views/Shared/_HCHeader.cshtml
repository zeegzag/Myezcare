<!-- BEGIN HEADER -->
@{
    CacheHelper _cacheHelper = new CacheHelper();
    CacheHelper_MyezCare ch_MyezcareOrg = new CacheHelper_MyezCare();
    MyEzcareOrganization myezCareOrg = ch_MyezcareOrg.GetCachedData<MyEzcareOrganization>();
    var OrgTypes = myezCareOrg.OrganizationType.Split(',');
    List<string> OrgTypeList = Common.AddSpaceBeforeCapLetters(OrgTypes);

    var SelectedOrgType = string.Empty;
    if (SessionHelper.IsHomeCare)
    {
        SelectedOrgType = "Home Care";
        SelectedOrgType = "Home Care";
    }
    else if (SessionHelper.IsPrivateDutyCare)
    {
        SelectedOrgType = "Private Duty Care";
    }
    else if (SessionHelper.IsDayCare)
    {
        SelectedOrgType = "Day Care";
    }
    else if (SessionHelper.IsCaseManagement)
    {
        SelectedOrgType = "Case Management";
    }
    else if (SessionHelper.IsRAL)
    {
        SelectedOrgType = "RAL";
    }
    else if (SessionHelper.IsStaffing)
    {
        SelectedOrgType = "Staffing";
    }
    int PaymentNotificationTime = 5000;
}
using System.Configuration;
using.
<style>
    /*.dropbtn {
        background-color: #4CAF50;
        color: white;
        padding: 16px;
        font-size: 16px;
        border: none;
    }*/

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        /*background-color: #f1f1f1;*/
        min-width: 193px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdown-content a {
            /*color: black;*/
            font-size: 12px;
            font-weight: 300;
            width: 100%;
            text-transform: uppercase;
            border-bottom: 1px solid #f3f3f3;
        }

            .dropdown-content a:hover {
                background-color: gainsboro;
            }

    .dropdown:hover .dropdown-content {
        display: block;
    }

    .dropdown:hover .dropbtn {
        background-color: #3e8e41;
    }

    .notification-bar {
        background-color: #1b1c6c;
        padding: 12px 10px;
        color: white;
    }
</style>
<div class="page-header navbar navbar-fixed-top bar">
    <!-- BEGIN HEADER INNER -->
    <div class="page-header-inner ">
        <!-- BEGIN LOGO -->
        <div class="page-logo">
            @if (!string.IsNullOrEmpty(_cacheHelper.SiteLogo))
            {
                <a href="@Constants.HCDashboardURL">
                    <img src="@_cacheHelper.SiteLogo" alt="logo" class="logo-default sidebar-logo" />
                </a>
            }
            <div class="menu-toggler sidebar-toggler"></div>
        </div>

        <ul class="nav navbar-nav pull-left">

            <!-- BEGIN USER LOGIN DROPDOWN -->
            <!-- DOC: Apply "dropdown-dark" class after below "dropdown-extended" to change the dropdown styte -->
            <!--<li class="dropdown dropdown-user">
                <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-close-others="true">-->
            @*<img alt="" class="img-circle" src="~/Assets/images/avatar3_small.jpg" />*@
            <!--<span class="username username-hide-on-mobile">Select</span>
                    <i class="fa fa-angle-down"></i>
                </a>


            <!-- END USER LOGIN DROPDOWN -->
            <!-- BEGIN QUICK SIDEBAR TOGGLER -->
            <!-- DOC: Apply "dropdown-dark" class after below "dropdown-extended" to change the dropdown styte -->
            <!-- END QUICK SIDEBAR TOGGLER -->

        </ul>

        <!-- END LOGO -->
        <!-- BEGIN RESPONSIVE MENU TOGGLER -->
        <a href="javascript:;" class="menu-toggler responsive-toggler" data-toggle="collapse" data-target=".navbar-collapse"></a>
        <!-- END RESPONSIVE MENU TOGGLER -->
        <!-- BEGIN TOP NAVIGATION MENU -->
        <!-- Swith Theme -->
        <div class="switch-theme">
            @*<div class="switch-link">
                    <a href="#" class="dark" ng-click="AddmyEzCarelightClass()">Classic Layout</a>
                    <a href="#" class="light" ng-click="RemovemyEzCarelightClass()">New Layout</a>
                </div>*@
        </div>
        <!-- Swith Theme End-->


        <div class="top-menu">




            @*<div class="dropdown dropdown-user">
                    <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-close-others="true">
                <img src="~/Assets/images/notes.png" height="30" style="margin-top:8px" /></a>
                    <div class="dropdown-menu dropdown-menu-defaul">
                        <a href="#" data-ng-click="CallCaptureModel(1)"><i class="fa fa-plus"></i> @Resource.Add Call Details</a>
                        <a href="#" data-ng-click="CallCaptureModel(2)"><i class="fa fa-list"></i> Call Details @Resource.List</a>
                    </div>
                </div>*@
            @if (SessionHelper.IsEmployeeLogin)
            {
                    <a href="@Constants.HC_EmployeeAttendanceClockinoutURL"  class="clockinout" title="@Resource.Clockinout" 
                       style="text-decoration: none;margin-top:15px !important">
                        <span class="" ng-class="{'text-warning': AttendanceDetailType == 3 , 'text-danger': AttendanceDetailType == 2} "
                          style="font-size: 13px; vertical-align: super;"><b>@Resource.EmployeeAttendanceClockinout</b></span>
                    </a>
                    <a href="@Constants.HC_EmployeeAttendanceClockinoutURL" title="@Resource.Clockinout"
                       class="clockinout" style="text-decoration: none;">
                        <i ng-class="{'text-warning': AttendanceDetailType == 3 , 'text-danger': AttendanceDetailType == 2} "
                           class="fa fa-clock-o fa-3x" aria-hidden="true"></i>
                        <span ng-class="{'text-warning': AttendanceDetailType == 3 , 'text-danger': AttendanceDetailType == 2} "
                              style="font-size: 13px; vertical-align: super;" class="">{{timer}}</span>
                    </a>
            }
            <a class="info_icon" href="https://support.myezcare.com" target="_blank" title="Support"><i class="fa fa-question-circle fa-4x" aria-hidden="true"></i></a>
            <a href="" title="Notification" data-ng-click="NotificationEditModel()" class="notification" style="text-decoration: none;">
                <img src="~/Assets/images/Notification.png" height="30" style="margin-top:8px" />
                <span data-ng-if="WebNotificationCount.length > 0" class="notification-count">{{WebNotificationsCount}}</span>
            </a>

            @if (SessionHelper.IsDayCare && Common.HasPermission(Constants.ADC_Scheduling_Visitor_Attendance))
            {
                <a class="btn btn-sm btn-success" href="@Constants.HC_ScheduleDayCareAttendence">Visitor Attendance</a>
            }
            @*<span style="color: #c5c5c5;padding: 14px 10px;float: initial;">Download App</span>
                <a role="button" href="@myezCareOrg.AndroidAppDownloadURL" title="Download Android app"><img src="~/Assets/images/Google-Play-Store-alt-icon.png" height="30" style="margin-top:9px;padding-right:10px" /></a>
                <a role="button" href="@myezCareOrg.iOSAppDownloadURL" title="Download iOS app"><img src="~/Assets/images/App-Store-icon.png" height="30" style="margin-top:9px;" /></a>*@

            <ul class="nav navbar-nav pull-right">


                <li class="dropdown dropdown-user">
                    @if (OrgTypeList.Count > 1)
                    {
                        <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-close-others="true">
                            <span class="username username-hide-on-mobile">@SelectedOrgType</span>
                            <i class="fa fa-angle-down"></i>
                        </a>

                        <ul class="dropdown-menu dropdown-menu-default">
                            @foreach (string item in OrgTypeList)
                            {
                                <li data-ng-click="ChangeOrgType('@item')">
                                    <a href="javscript:void(0)">
                                        @item
                                    </a>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <a href="javascript:;" class="dropdown-toggle" style="padding-right:6px !important;cursor:context-menu;">
                            <span class="username username-hide-on-mobile">@OrgTypeList[0]</span>
                        </a>
                    }
                </li>

                <!-- BEGIN USER LOGIN DROPDOWN -->
                <!-- DOC: Apply "dropdown-dark" class after below "dropdown-extended" to change the dropdown styte -->
                <li class="dropdown dropdown-user">
                    <a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-close-others="true">
                        @*<img alt="" class="img-circle" src="~/Assets/images/avatar3_small.jpg" />*@
                        <span class="username username-hide-on-mobile">@SessionHelper.FirstName</span>
                        <i class="fa fa-angle-down"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-default">
                        @if (SessionHelper.IsEmployeeLogin)
                        {
                            <li data-selectmenu="@Resource.SMI_EditProfile">
                                <a href="@Constants.EditProfileURL">
                                    <i class="icon-user"></i>My Profile
                                </a>
                            </li>
                        }
                        @if (Common.HasPermission(Constants.HC_Permission_AdditionalPermission_RolePermissions))
                        {

                            <li data-selectmenu="@Resource.SMI_RoleAndPermission">
                                <a href="@Constants.HCRolePermissionURL">
                                    <i class="icon-key"></i>@Resource.RoleAndPermission
                                </a>
                            </li>
                        }
                        @if (Common.HasPermission(Constants.HC_Permission_AdditionalPermission_OrganizationSettings))
                        {
                            <li data-selectmenu="@Resource.SMI_OrganizationSettings">
                                <a href="@Constants.Organization_SettingPageUrl">
                                    <i class="icon-settings"></i>@Resource.OrganizationSettings
                                </a>
                            </li>
                        }

                        @if (Common.HasPermission(Constants.Permission_View_Billing_Information))
                        {
                            <li class="logout">
                                <a href="@Constants.AccountHistoryURL">
                                    <i class="fa fa-money"></i>@Resource.Billing
                                </a>
                            </li>
                        }


                        @*<li class="divider"></li>*@
                        <li class="logout">
                            <a href="@Constants.LogoutURL">
                                <i class="icon-logout"></i>Log Out
                            </a>
                        </li>
                    </ul>
                </li>
                <!-- END USER LOGIN DROPDOWN -->
                <!-- BEGIN QUICK SIDEBAR TOGGLER -->
                <!-- DOC: Apply "dropdown-dark" class after below "dropdown-extended" to change the dropdown styte -->
                <!-- END QUICK SIDEBAR TOGGLER -->

            </ul>


        </div>
        <!-- END TOP NAVIGATION MENU -->
    </div>
    <!-- END HEADER INNER -->
    @*<div>
            <script type="text/javascript">
                (function (i, s, o, g, r, a, m) {
                    i['teamslivechatObject'] = r; i[r] = i[r] || function () {
                        (i[r].q = i[r].q || []).push(arguments)
                    }, i[r].l = 1 * new Date(); a = s.createElement(o),
                        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
                })(window, document, 'script', '/Assets/js/viewjs/siteApp/Areas/HomeCare/ChatJs/chat.js', 'teamslivechat');
            </script>
        </div>*@
</div>
<!-- END HEADER -->
@if (SessionHelper.CompanyInvoiceInfo != null && SessionHelper.CompanyInvoiceInfo.Count > 0)
{
    <div class="modal fade" data-backdrop="static" data-keyboard="false" id="PaymentStatusModal33" role="dialog">
        @if (Common.HasPermission(Constants.Permission_View_Billing_Information))
        {
            <div class="modal-dialog modal-lg" style="width: 80% !important;height:50px; border: 2px solid #3d3d3d;margin-left: 244px;border-radius: 10px;margin-top:48px">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-ng-click="InvoicePayNotification()">&times;</button>
                    </div>

                    <div class="modal-body">
                        <div class="invoiceListContainer">
                            @Html.Partial("_CompnayInvoiceList", new InvoiceViewModel())
                        </div>
                    </div>

                </div>
            </div>
        }
        else
        {
            <div class="modal-dialog modal-lg" style="width: 73% !important;height:116px;margin-left: 293px;margin-top:13px;">
                <div class="modal-content" style="height:70px;background-color:darkred;color:white">
                    <div class="modal-header">
                        <button type="button" class="close" data-ng-click="InvoicePayNotification()">&times;</button>
                    </div>

                    <div class="modal-body" style="padding-top:30px">
                        <div class="">
                            <span style="font-size: 14px;margin-left: 52px;font-weight: 300;">@Resource.BillingPermissionDenied</span>
                        </div>
                    </div>

                </div>
            </div>
        }
    </div>
}

<div class="modal fade" id="Notification" role="dialog">
    <div class="modal-dialog modal-lg" style="border: 2px solid #3d3d3d;margin-left: 244px;border-radius: 10px;margin-top:48px">
        <div class="modal-content">
            <div class="modal-header" style="background-color:gainsboro">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" style="text-align:center"><b>Employee Late Clock-In Sheet</b></h4>
            </div>

            <div class="modal-body">
                <div>
                    <table class="table table-bordered table-striped table-condensed flip-content">
                        <thead class="">
                            <tr>
                                <th class="col-lg-6">
                                    <span>EmployeeName</span>
                                </th>
                                <th class="">
                                    <span>ScheduleStartDate</span>
                                </th>
                                <th class="width-100px">
                                    <span>ScheduleEndDate</span>
                                </th>
                                <th class="width-100px">
                                    <span>ScheduleClockInTime</span>
                                </th>
                                <th class="width-100px">
                                    <span>ActualClockInTime</span>
                                </th>
                                <th class="width-100px">
                                    <span>ClockOutTime</span>
                                </th>
                                @*<th class="width-155px">@Resource.Action</th>
                                    </tr>*@
                        </thead>
                        <tbody>
                            <tr data-ng-repeat="item in NotificationList">
                                <td>{{item.LastName}},{{ item.FirstName}}</td>
                                <td>{{item.ScheduleDate | date : "fullDate"}}</td>
                                <td>{{item.ScheduleEndDate}}</td>
                                <td>{{item.StartTime}}</td>
                                <td> {{item.ClockInTime}}</td>
                                <td> {{item.ClockOutTime}}</td>
                                @*<td> {{item.Action}}</td>*@
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@*Call Capture Details Model Start*@
<div class="modal fade" id="AddCallCaptureModel" style="overflow-y: hidden !important;" role="dialog">
    <div class="modal-dialog modal-lg" style="margin-left: 244px;border-radius: 10px;margin-top:48px;width:71% !important;height:100% !important">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                @*  <h4 class="modal-title" style="text-align:center"><b>Call Capture Details</b></h4>*@
            </div>
            <div class="modal-body">
                <div class="container">
                    <iframe id="CallCaptureModelDDLBindIFrame" style="position:absolute; top:2%;  bottom:2%; right:0px; width:100%; min-height:500px; border:none; margin:0; padding:0; overflow:hidden; z-index:999999;"></iframe>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@*Call Capture Details Model Closed*@
<div id="sidebar" class="asideBar-right fixed sidebar-web-notif">
    <div class="listContentinner width-100 padding-right-15">
        <div class="close-sidebar" data-ng-click="NotificationModelClosed()"><i class="fa fa-angle-right bg-shaddingNotification"></i></div>

        <div class="caption font-size-18 uppercase bold notification-bar">
            @Resource.Notifications
            <div class="pull-right padding-left-25" data-ng-show="WebNotificationListAjaxStart">
                <img src="~/Assets/images/lazyload.gif" />
            </div>
        </div>

        <div class="display-flex align-items-center margin-bottom-15 margin-top-15">
            <div class="flex-grow">
                <button data-ng-if="WebNotificationList.length > 0" type="button" class="btn btn-default" data-ng-click="MarkSelectedAsRead()">
                    @Resource.MarkAsRead
                </button>
            </div>
            <div data-ng-if="WebNotificationList.length > 0">
                <a style="position:relative; right:13px;" data-ng-click="ViewAllNotification()">View All</a>
            </div>
        </div>

        <div data-ng-if="WebNotificationList.length > 0" style="max-height: calc(100vh - 100px); overflow-y: auto;">
            <div class="display-flex padding-15 {{$index == WebNotificationList.length - 1 ? '' : 'border-bottom border-bottom-default'}}" data-ng-repeat="item in WebNotificationList">
                <div class="width-90percent float-left {{item.IsRead ? '' : 'bold'}}">
                    <div class="display-flex">
                        <div class="margin-right-10">
                            <input id="chk-item-{{$index}}" class="uniformControls" type="checkbox"
                                   data-uniform-value="item.IsSelected"
                                   data-ng-model="item.IsSelected"
                                   data-ng-checked="item.IsSelected"
                                   data-ng-disabled="item.IsRead" />
                        </div>
                        <div>
                            {{item.Message}}
                        </div>
                    </div>
                </div>
                <div class="width-10percent padding-top-5 float-left padding-right-10">
                    <button type="button" class="close" data-ng-click="DeleteWebNotification(item.WebNotificationID)">
                        @*<span aria-hidden="true">&times;</span>*@
                    </button>
                </div>
            </div>
        </div>
        <div data-ng-if="WebNotificationList.length == 0">
            <div class="display-flex mt-15">
                <div class="flex-grow alert alert-danger">
                    @Html.Raw(Resource.NoRecordsFound)
                </div>
            </div>
        </div>

    </div>
</div>

@*______________________________________________________________Invoice_______________________*@
<script>
    function openWindowFX() {
        localStorage.removeItem("obj1DayInterval");
        localStorage.removeItem("obj60minInterval");
        localStorage.removeItem("obj30MinuteInterval");

        $("#PaymentStatusModal2").modal("hide");
        $("#PaymentStatusModal3").modal("hide");
        $("#PaymentStatusModal4").modal("hide");
        $("#PaymentStatusModal33").modal("show");
    }
    function test() {
        $("#PaymentStatusModal4").modal("hide");
    }
</script>
@if (SessionHelper.CompanyInvoiceInfo != null && SessionHelper.CompanyInvoiceInfo.Count > 0)
{
    List<InvoiceMod> checkPaymentDueDateOver1 = null;

    //>=7 and <15
    List<InvoiceMod> checkPaymentDueDateOver2 = SessionHelper.CompanyInvoiceInfo != null && SessionHelper.CompanyInvoiceInfo.Count > 0 ?
                                                      SessionHelper.CompanyInvoiceInfo.Where(x => DateTime.Now.Date >= Convert.ToDateTime(x.DueDate).AddDays(7).Date &&
                                                        DateTime.Now.Date < Convert.ToDateTime(x.DueDate).AddDays(7).Date).ToList() : new List<InvoiceMod>();

    //>=15 days over and <21
    List<InvoiceMod> checkPaymentDueDateOver3 = SessionHelper.CompanyInvoiceInfo != null && SessionHelper.CompanyInvoiceInfo.Count > 0 ?
        SessionHelper.CompanyInvoiceInfo.Where(x => DateTime.Now.Date >= Convert.ToDateTime(x.DueDate).AddDays(7).Date &&
        DateTime.Now.Date < Convert.ToDateTime(x.DueDate).AddDays(15).Date).ToList() :
        new List<InvoiceMod>();

    //21 days over
    List<InvoiceMod> checkPaymentDueDateOver4 = SessionHelper.CompanyInvoiceInfo != null && SessionHelper.CompanyInvoiceInfo.Count > 0 ?
    SessionHelper.CompanyInvoiceInfo.Where(x => DateTime.Now.Date >= Convert.ToDateTime(x.DueDate).AddDays(15).Date).ToList() :
    new List<InvoiceMod>();

    string path = Request.Url.AbsolutePath.ToString();
    if (checkPaymentDueDateOver1 != null && checkPaymentDueDateOver1.Count > 0 && path != "/hc/invoice/CompanyClientInvoice")
    {
        PaymentNotificationTime = 500;
        <div class="modal fade" data-backdrop="static" data-keyboard="false" id="PaymentStatusModal" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" style="text-align:center"><b>Payment Notification</b></h4>
                    </div>

                    <div class="modal-body">
                        <div>
                            @*MONTHLY INVOICE IS PAST DUE, PLEASE PAY NOW TO AVOID THE INTERRUPTION OF SERVICE*@
                            Monthly invoice is past due, please pay now to avoid the interruption of service
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success">Pay Now</button>
                    </div>
                </div>
            </div>
        </div>
        if (!checkPaymentDueDateOver1[0].IsFirst3DayNotification)
        {
            checkPaymentDueDateOver1[0].IsFirst3DayNotification = true;
            SessionHelper.CompanyInvoiceInfo = checkPaymentDueDateOver1;
            <script>
                function show1() {

                setTimeout(function () {
                    if (localStorage.getItem("IsOneDayBlock30Min")==undefined) {
                        $('#PaymentStatusModal').modal('show');
                    } else {
                        $('#PaymentStatusModal').modal('show');
                    }
                }, @PaymentNotificationTime)
            }
            show1();
            </script>
        }
    }
    //Progress Over due date but 60 wait

    if (checkPaymentDueDateOver2 != null && checkPaymentDueDateOver2.Count > 0 && path != "/hc/invoice/CompanyClientInvoice")
    {
        <div class="modal fade common-payment-popup" data-backdrop="static" data-keyboard="false" id="PaymentStatusModal2" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title"><b>Payment Notification</b></h4>
                    </div>

                    <div class="modal-body">
                        <div class="content-inner">
                            @*MONTHLY INVOICE IS PAST DUE, PLEASE PAY NOW TO AVOID THE INTERRUPTION OF SERVICE*@
                            Monthly invoice is past Due, please pay now to avoid the interruption of service
                        </div>
                    </div>
                    <div class="modal-footer">
                        <a onclick="openWindowFX()" class="btn btn-success">Pay Now</a>
                        <a href="#" id="remindmelateEvery30Minute" onclick="remindMeLaterAfter30Min()" class="btn btn-default">Remind me later</a>
                        <a href="#" onclick="dismissForOneDay()" data-dismiss="modal" class="btn btn-default dismiss">Dismiss</a>
                    </div>
                </div>
            </div>
        </div>
        <script>
            //#region common

            function openWindowFX1() {
                                    $("#PaymentStatusModal33").modal("show");
                            }
            function diff_minutes(dt2, dt1)
                     {

                      var diff =(dt2.getTime() - dt1.getTime()) / 1000;
                      diff /= 60;
                      return Math.abs(Math.round(diff));

                     }

            function show2() {
                            setTimeout(function () {
                                        if (localStorage.getItem("obj1DayInterval") != undefined) {
                                            this.getObj1DayIntervalFX();
                                        }
                                        if (localStorage.getItem("obj30MinuteInterval") != undefined) {
                                            this.getIntrval30Minute();
                                         }
                                        if (localStorage.getItem("obj1DayInterval") == undefined && localStorage.getItem("obj30MinuteInterval") == undefined) {
                                                $('#PaymentStatusModal2').modal('show');

                                        }
                                    }, 5000)
                                }

            function buttontex1() {
                var counter = 60;
                    var interval1 = setInterval(function() {
                        counter--;
                        $("#remindmelateEvery30Minute").attr("disabled","disabled");

                        // Display 'counter' wherever you want to display it.
                        if (counter <= 0) {
                         		clearInterval(interval1);
                            $('#remindmelateEvery30Minute').text('Remind me later');
                            $("#remindmelateEvery30Minute").removeAttr("disabled");
                            return;
                        }else{
                        	$('#remindmelateEvery30Minute').text('Remind me later '+counter);
                        }
                    }, 1000);
            }
            //#endregion

            //#region 1DayInterval

            function dismissForOneDay() {
                this.setObj1DayIntervalFX();
            }
            function getObj1DayIntervalFX() {
                if (localStorage.getItem("obj1DayInterval") != undefined &&
                    JSON.parse(localStorage.getItem("obj1DayInterval")).date1 != undefined &&
                    JSON.parse(localStorage.getItem("obj1DayInterval")).date1 != "" &&
                    JSON.parse(localStorage.getItem("obj1DayInterval")).date1 != null)
                {
                  var oneDaySetintrval=  setInterval(function() {

                    const obj1DayDate =localStorage.getItem("obj1DayInterval") !=undefined ? JSON.parse(localStorage.getItem("obj1DayInterval")).date1:null;
                    const date1 =obj1DayDate !=null? new Date(obj1DayDate):null;
                    const date2 = new Date('@DateTime.Now.Date.Month/ @DateTime.Now.Date.Day/@DateTime.Now.Date.Year');
                    const diffTime =date1 !=null? Math.abs(date2 - date1):null;
                    const diffDays =diffTime !=null? Math.ceil(diffTime / (1000 * 60 * 60 * 24)):null;
                    console.log(diffDays);
                    if (diffDays !=null && diffDays >= 1) {
                        localStorage.removeItem("obj1DayInterval");
                        clearInterval(oneDaySetintrval);
                        $('#PaymentStatusModal2').modal('show');
                    } else {
                            $('#PaymentStatusModal2').modal('hide');
                        }
                    },9000)
                }
            }
            function setObj1DayIntervalFX() {
                localStorage.setItem("obj1DayInterval", JSON.stringify({ date1: new Date('@DateTime.Now.Date.Month/ @DateTime.Now.Date.Day/@DateTime.Now.Date.Year') }))
                $('#PaymentStatusModal2').modal('hide');
                this.getObj1DayIntervalFX();
            }
            //#endregion

            //#region 30 minute intrval
            function setIntrval30Minute() {

                localStorage.setItem("obj30MinuteInterval", JSON.stringify({ date1: new Date() }))
                $('#PaymentStatusModal2').modal('hide');
                this.getIntrval30Minute();
            }
            function getIntrval30Minute() {
                if (localStorage.getItem("obj30MinuteInterval") != undefined) {
                 var intrvl=   setInterval(function () {
                    let date2 = new Date();
                    let diffTime =localStorage.getItem("obj30MinuteInterval") !=undefined ? this.diff_minutes(date2,new Date(JSON.parse(localStorage.getItem("obj30MinuteInterval")).date1)):null;

                     if (diffTime !=null && diffTime >= 30) {
                            clearInterval(intrvl);
                            localStorage.removeItem("obj30MinuteInterval");
                            $('#PaymentStatusModal2').modal('show');
                            $("#remindmelateEvery30Minute").attr("disabled","disabled");
                            this.buttontex1();
                     } else {
                         clearInterval(intrvl);
                     }
                },9000);
                } else {
                    localStorage.removeItem("obj30MinuteInterval");
                }
            }

            function remindMeLaterAfter30Min() {
                this.setIntrval30Minute();
                return;
            }

            //#endregion

            //#region  onload calling
            show2();
            //#endregion
        </script>
    }


    //Done Over due date 24 hours
    if (checkPaymentDueDateOver3 != null && checkPaymentDueDateOver3.Count > 0 && path != "/hc/invoice/CompanyClientInvoice")
    {
        <div class="modal fade common-payment-popup" data-backdrop="static" data-keyboard="false" id="PaymentStatusModal3" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title"><b>Payment Notification</b></h4>
                    </div>

                    <div class="modal-body">
                        <div class="content-inner">
                            Monthly invoice is past due, please pay now to avoid the interruption of service
                            @*MONTHLY INVOICE IS PAST DUE, PLEASE PAY NOW TO AVOID THE INTERRUPTION OF SERVICE*@
                        </div>
                    </div>
                    <div class="modal-footer">

                        <a onclick="openWindowFX()" data-dismiss="modal" class="btn btn-success">Pay Now</a>

                        <a href="#" id="remindMeAfte1hours" onclick="remindMeLaterAfter1hours()" class="btn btn-default">Remind me later</a>
                    </div>
                </div>
            </div>
        </div>
        <script>

            //#region CommonFX
            function openWindowFX2() {
                $("#PaymentStatusModal33").modal("show");
            }
            function buttontex() {
                var counter = 60;
                var interval = setInterval(function () {
                    counter--;
                    // Display 'counter' wherever you want to display it.
                    if (counter <= 0) {
                        clearInterval(interval);
                        $('#remindMeAfte1hours').text('Remind me later');
                        $("#remindMeAfte1hours").removeAttr("disabled");
                        return;
                    } else {
                        $('#remindMeAfte1hours').text('Remind me later ' + counter);
                    }
                }, 1000);
            }
            function show3() {
                setTimeout(function () {
                    if (localStorage.getItem("obj60minInterval") != undefined) {
                        this.getAfter1hours();

                    } else {
                        $('#PaymentStatusModal3').modal('show');

                    }
                }, 6000)
            };

            function diff_minutes(dt2, dt1) {

                var diff = (dt2.getTime() - dt1.getTime()) / 1000;
                diff /= 60;
                return Math.abs(Math.round(diff));

            }
            //#endregion

            //#region remindMeLaterAfter1hours
            function remindMeLaterAfter1hours() {
                if ($("#remindMeAfte1hours").attr("disabled") != undefined) {
                    return;
                }
                this.setAfter1hours();

                return;

                var date1 = new Date();
                if (localStorage.getItem("obj60minInterval") == undefined) {
                    localStorage.setItem("obj60minInterval", JSON.stringify({ date1: date1 }))
                }
                $('#PaymentStatusModal3').modal('hide');
                var setintrvlObj = setInterval(function () {
                    let date2 = localStorage.getItem("obj60minInterval") != undefined ? new Date() : null;
                    let diffTime = date2 != null ? this.diff_minutes(date2, new Date(JSON.parse(localStorage.getItem("obj60minInterval")).date1)) : null;

                    if (diffTime != null && diffTime >= 58) {
                        localStorage.removeItem("obj60minInterval");
                        clearInterval(setintrvlObj);
                        $('#PaymentStatusModal3').modal('show');
                        $("#remindMeAfte1hours").attr("disabled", "disabled");
                        this.buttontex();
                    }
                }, 9000);

            }

            function getAfter1hours() {
                var setintrvlObj = setInterval(function () {
                    let date2 = localStorage.getItem("obj60minInterval") != undefined ? new Date() : null;
                    let diffTime = date2 != null && this.diff_minutes(date2, new Date(JSON.parse(localStorage.getItem("obj60minInterval")).date1));

                    if (diffTime != null && diffTime >= 58) {
                        localStorage.removeItem("obj60minInterval");
                        clearInterval(setintrvlObj);
                        $('#PaymentStatusModal3').modal('show');
                        $("#remindMeAfte1hours").attr("disabled", "disabled");
                        this.buttontex();
                    } else {
                        clearInterval(setintrvlObj);
                    }
                }, 9000);
            }

            function setAfter1hours() {
                localStorage.setItem("obj60minInterval", JSON.stringify({ date1: new Date() }))
                $('#PaymentStatusModal3').modal('hide');
                this.getAfter1hours();
            }
            //#endregion

            //#region pageonload
            show3();
            //#endregion
        </script>
    }

    if (checkPaymentDueDateOver4 != null && checkPaymentDueDateOver4.Count > 0 && path != "/hc/invoice/CompanyClientInvoice")
    {
        <div class="modal fade common-payment-popup" data-backdrop="static" data-keyboard="false" id="PaymentStatusModal4" role="dialog">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title"><b>Payment Notification</b></h4>
                    </div>

                    <div class="modal-body">
                        <div class="content-inner">
                            Monthly invoice is past due, please pay now to avoid the interruption of service
                            @*MONTHLY INVOICE IS PAST DUE, PLEASE PAY NOW TO AVOID THE INTERRUPTION OF SERVICE*@
                        </div>
                    </div>
                    <div class="modal-footer">
                        <a onclick="openWindowFX()" data-dismiss="modal" class="btn btn-success">Pay Now</a>
                    </div>
                </div>
            </div>
        </div>
        <script>
            function openWindowFX3() {
                $("#PaymentStatusModal33").modal("show");

            }

            function show4() {
                var setIntrvl = setInterval(function () {
                    if (!$('#PaymentStatusModal4').hasClass("in")) {
                        $('#PaymentStatusModal4').modal('show');
                        clearInterval(setIntrvl);
                    }
                    //clearInterval();
                }, 5000)
            }
            show4();
        </script>

    }
}

