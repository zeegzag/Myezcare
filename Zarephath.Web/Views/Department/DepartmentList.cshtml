@{
    ViewBag.Title = string.Format("{0} {1}", Resource.ZarePhath, Resource.DepartmentList);
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.SelectedMenuItem = Resource.SMI_DepartmentList;
}
@model SetDepartmentListPage
@Html.Hidden("hdnDepartmentListModel", Common.SerializeObject(Model))
<div data-ng-controller="DepartmentListController">
    <div class="page-bar">
        <h3 class="page-title">@Resource.DepartmentList &nbsp;<small>@Resource.DepartmentsInformation</small>
            <a href="{{AddDepartmentURL}}" class="btn btn-sm green-jungle letter-space pull-right"><i class="fa fa-plus">&nbsp;&nbsp;</i>@Resource.Department</a>
        </h3>
    </div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            @if (Common.HasPermission(Constants.Permission_Department_AddUpdate))
            {
                <div class="btn-group" data-ng-show="DepartmentList.length > 0">
                    <span class="btn blue btn-sm grey border-grey-cascade" style="padding: 5px;">
                        <input id="SelectAllDepartment" type="checkbox" class="unicheckbox" data-ng-model="SelectAllCheckbox" val="SelectAllCheckbox" data-ng-change="SelectAll()">
                        <label for="SelectAllDepartment"></label>
                    </span>
                </div>
            }
            <div class="btn-group">
                <button class="btn blue btn-sm grey border-grey-cascade" data-ng-click="Refresh()">
                    <i class="fa fa-refresh"></i>&nbsp;&nbsp;@Resource.Refresh
                </button>
            </div>
            <div class="btn-group">
                @Html.DropDownListFor(m => m.SearchDepartmentModel.IsDeleted, Model.DeleteFilter.ToSelectList(Convert.ToString(Model.SearchDepartmentModel.IsDeleted), "Name", "Value", "", ""),
                                                                      new
                                                                      {
                                                                          id = "IsDeleted",
                                                                          data_ng_model = "TempSearchDepartmentModel.IsDeleted",
                                                                          data_ng_init = "TempSearchDepartmentModel.IsDeleted = TempSearchDepartmentModel.IsDeleted==null?'-1':TempSearchDepartmentModel.IsDeleted.toString()",
                                                                          @class = "form-control input-sm btn blue btn-sm grey border-grey-cascade",
                                                                          data_ng_change = "SearchDepartment()"
                                                                      })
            </div>
            @if (Common.HasPermission(Constants.Permission_Department_AddUpdate))
            {
                <div class="btn-group" data-ng-if="SelectedDepartmentIds.length > 0">
                    <button type="button" data-ng-click="DeleteDepartment()" class="btn blue btn-sm grey border-grey-cascade">
                        <i class="fa fa-random margin-right-10"></i>{{TempSearchDepartmentModel.IsDeleted==0?'@Constants.DisableSelected' :(TempSearchDepartmentModel.IsDeleted==1?'@Constants.EnableSelected':'@Constants.InverseSelected')}}</button>
                </div>
            }
            <div class="inline-block pull-right" data-ng-if="DepartmentList.length > 0">
                <div class="pull-right margin-left-5">
                    <dir-pagination-controls boundary-links="true" max-size="DepartmentListPager.maxSize" on-page-change="DepartmentListPager.pageChanged(newPageNumber)" pagination-id="DepartmentListPager"></dir-pagination-controls>
                </div>
            </div>
        </div>
        <div class="space20"></div>
    </div>
    <div>
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="portlet-body compact" style="display: block;">
                    <div class="table-responsive">
                        <form id="frmemployeelist">
                            <table class="table table-bordered table-striped table-condensed flip-content">
                                <thead class="flip-content">
                                    <tr>
                                        @if (Common.HasPermission(Constants.Permission_Department_AddUpdate))
                                        {
                                            <th class="width-20px"></th>
                                        }
                                        <th class="">
                                            <a class="anchor_color" href="javascript:;" data-ng-click="DepartmentListPager.sortColumn('DepartmentName')">@Resource.Department</a>
                                            <span class="sortorder" data-ng-show="DepartmentListPager.sortIndex === 'DepartmentName'" data-ng-class="{reverse:DepartmentListPager.reverse}"></span>
                                        </th>

                                        <th class="">
                                            <a class="anchor_color" href="javascript:void(0);" data-ng-click="DepartmentListPager.sortColumn('Manager')">@Resource.Manager</a>
                                            <span class="sortorder" data-ng-show="DepartmentListPager.sortIndex === 'Manager'" data-ng-class="{reverse:DepartmentListPager.reverse}"></span>
                                        </th>
                                        <th class="">
                                            <a class="anchor_color" href="javascript:void(0);" data-ng-click="DepartmentListPager.sortColumn('Location')">@Resource.Location</a>
                                            <span class="sortorder" data-ng-show="DepartmentListPager.sortIndex === 'Location'" data-ng-class="{reverse:DepartmentListPager.reverse}"></span>
                                        </th>
                                        @*<th class="col-sm-3">
                                            <a class="anchor_color" href="javascript:void(0);" data-ng-click="DepartmentListPager.sortColumn('Address')">@Resource.Address</a>
                                            <span class="sortorder" data-ng-show="DepartmentListPager.sortIndex === 'Address'" data-ng-class="{reverse:DepartmentListPager.reverse}"></span>
                                        </th>*@
                                        <th class="col-sm-2">@Resource.Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="compact-search-tr">
                                        @if (Common.HasPermission(Constants.Permission_Department_AddUpdate))
                                        {
                                            <td></td>
                                        }
                                        <td>
                                            @* <div class="input-group input-group-sm">
                                                @Html.DropDownListFor(p => p.SearchDepartmentModel.DepartmentID, Model.DepartmentDropdownList.ToSelectList(Model.SearchDepartmentModel.DepartmentID.ToString() ?? "", "DepartmentName", "DepartmentID", Resource.SelectDepartment, ""),
                                                                  new
                                                                      {
                                                                          data_ng_model = "TempSearchDepartmentModel.DepartmentID",
                                                                          data_ng_init = "TempSearchDepartmentModel.DepartmentID=TempSearchDepartmentModel.DepartmentID==''?null:TempSearchDepartmentModel.DepartmentID",
                                                                          @class = "form-control",
                                                                          id = "SearchDepartment"
                                                                      })
                                                @Html.ValidationMessageFor(m => m.SearchDepartmentModel.DepartmentID)
                                            </div>*@
                                            <div>
                                                @Html.DropDownListFor(p => p.SearchDepartmentModel.DepartmentID, Model.DepartmentDropdownList.ToSelectList(Model.SearchDepartmentModel.DepartmentID.ToString() ?? "", "DepartmentName", "DepartmentID", Resource.SelectDepartment, ""),
                                                                      new
                                                                          {
                                                                              data_ng_model = "TempSearchDepartmentModel.DepartmentID",
                                                                              data_ng_init = "TempSearchDepartmentModel.DepartmentID=TempSearchDepartmentModel.DepartmentID==''?null:TempSearchDepartmentModel.DepartmentID",
                                                                              @class = "form-control  input-small input-sm",
                                                                              id = "SearchDepartment",
                                                                              data_val = false,
                                                                              convert_to_number=""
                                                                          })
                                            </div>
                                            @*@Html.ValidationMessageFor(m => m.SearchDepartmentModel.DepartmentID)*@

                                        </td>
                                        <td>
                                            @*<div class="input-group input-group-sm">
                                                @Html.DropDownListFor(p => p.SearchDepartmentModel.EmployeeID, Model.ManagerDropdownModelList.ToSelectList(Model.SearchDepartmentModel.EmployeeID.ToString() ?? "", "Manager", "EmployeeID", Resource.DropdownSelect, ""),
                                                                  new
                                                                      {
                                                                          data_ng_model = "TempSearchDepartmentModel.EmployeeID",
                                                                          data_ng_init = "TempSearchDepartmentModel.EmployeeID=TempSearchDepartmentModel.EmployeeID==''?null:TempSearchDepartmentModel.EmployeeID",
                                                                          @class = "form-control",
                                                                          id = "SearchEmployee"
                                                                      })
                                                @Html.ValidationMessageFor(m => m.SearchDepartmentModel.EmployeeID)

                                            </div>*@

                                            @Html.DropDownListFor(p => p.SearchDepartmentModel.EmployeeID, Model.ManagerDropdownModelList.ToSelectList(Model.SearchDepartmentModel.EmployeeID.ToString() ?? "", "Manager", "EmployeeID", Resource.SelectManager, ""),
                                                                  new
                                                                      {
                                                                          data_ng_model = "TempSearchDepartmentModel.EmployeeID",
                                                                          data_ng_init = "TempSearchDepartmentModel.EmployeeID=TempSearchDepartmentModel.EmployeeID==''?null:TempSearchDepartmentModel.EmployeeID",
                                                                          @class = "form-control input-sm",
                                                                          id = "SearchEmployee",
                                                                          data_val = false,
                                                                          convert_to_number=""
                                                                      })
                                            @Html.ValidationMessageFor(m => m.SearchDepartmentModel.EmployeeID)
                                        </td>
                                        <td>
                                            @Html.TextBoxFor(m => m.SearchDepartmentModel.Location, new { data_ng_model = "TempSearchDepartmentModel.Location", @class = "form-control input-sm", maxlength = 50, placeholder = @Resource.SearchByLocation })
                                            @Html.ValidationMessageFor(m => m.SearchDepartmentModel.Location)
                                        </td>
                                        @*<td>
                                            @Html.TextBoxFor(m => m.SearchDepartmentModel.Address, new { data_ng_model = "TempSearchDepartmentModel.Address", @class = "form-control input-sm", maxlength = 100, placeholder = @Resource.SearchByAddress })
                                            @Html.ValidationMessageFor(m => m.SearchDepartmentModel.Address)
                                        </td>*@
                                        <td>
                                            <input type="submit" value="@Resource.Search" class="btn btn-default grey border-grey-cascade btn-xs" data-ng-click="SearchDepartment()"/>
                                            <input type="submit" value="@Resource.Reset" class="btn btn-default grey border-grey-cascade btn-xs" data-ng-click="ResetSearchFilter()"/>
                                        </td>
                                    </tr>
                                    <tr data-ng-class="{'deleted':department.IsDeleted}" dir-paginate="department in DepartmentList | itemsPerPage: DepartmentListPager.pageSize" total-items="DepartmentListPager.totalRecords" current-page="DepartmentListPager.currentPage" pagination-id="DepartmentListPager">
                                        @if (Common.HasPermission(Constants.Permission_Department_AddUpdate))
                                        {
                                            <td>
                                                <input type="checkbox" class="unicheckbox text-align-center" data-ng-change="SelectDepartment(department)" data-ng-model="department.IsChecked" val="department.IsChecked" />
                                            </td>
                                        }
                                        <td data-ng-bind="department.DepartmentName"></td>
                                        <td data-ng-bind="(department.Manager != null) ? department.Manager :'@Resource.NA'"></td>
                                        <td data-ng-bind="department.Location"></td>
                                        @*<td data-ng-bind="department.Address?department.Address:'@Resource.NA'"></td>*@
                                        <td>
                                            @if (Common.HasPermission(Constants.Permission_Department_AddUpdate))
                                            {
                                                <a href="{{AddDepartmentURL+department.EncryptedDepartmentID}}" class="btn btn-xs blue btnEdit">@Resource.Edit</a>
                                                @*<a href="javascript:void(0);" data-ng-click="DeleteDepartment(department)" class="btn btn-xs red btnDelete">@Resource.Delete </a>*@
                                                <a href="javascript:void(0);" data-ng-show="department.IsDeleted" data-ng-click="DeleteDepartment(department,'Enable')" class="btn btn-xs green">@Resource.Enable</a>
                                                <a href="javascript:void(0);" data-ng-show="!department.IsDeleted" data-ng-click="DeleteDepartment(department,'Disable')" class="btn btn-xs red">@Resource.Disable</a>
                                            }
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12" data-ng-if="DepartmentList.length > 0">
                <div class="col-sm-3 pull-left no-padding">
                    @Resource.Showing <span data-ng-bind="(DepartmentListPager.pageSize * DepartmentListPager.currentPage) -DepartmentListPager.pageSize  + 1"></span>
                    &nbsp;@Resource.To <span data-ng-bind="(DepartmentListPager.pageSize == DepartmentListPager.currentPageSize) ? (DepartmentListPager.pageSize * DepartmentListPager.currentPage) :(DepartmentListPager.pageSize * DepartmentListPager.currentPage) - DepartmentListPager.pageSize  + DepartmentListPager.currentPageSize"></span>&nbsp;@Resource.Of &nbsp;<span data-ng-bind="DepartmentListPager.totalRecords"></span>&nbsp;@Resource.Records
                </div>
                <div class="pull-right top">
                    <dir-pagination-controls boundary-links="true" max-size="DepartmentListPager.maxSize" on-page-change="DepartmentListPager.pageChanged(newPageNumber)" pagination-id="DepartmentListPager"></dir-pagination-controls>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <div data-ng-if="DepartmentList.length == 0">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="alert alert-danger">
                            @Html.Raw(Resource.NoRecordsFound)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*</div>*@

@section Scripts{
    <script type="text/javascript">
        var DeleteDepartmentConfirmMessage = '@Resource.DeleteDepartmentConfirmMessage';
        var DeleteAllDepartmentConfirmMessage = '@Resource.DeleteAllDepartmentConfirmMessage';
        var DeleteConfirmationMessage = '@string.Format(@Resource.DeleteConfirmationMessage, @Resource.Department)';
        var EnableDisableConfirmationMessage = '@string.Format(@Resource.EnableDisableConfirmationMessage, @Resource.Department)';
        var DepartmentEmployeeExistMessage = '@Resource.DepartmentEmployeeExistMessage';
        
    </script>
    @Scripts.Render("~/viewjs/siteApp/department/departmentlist")

}
